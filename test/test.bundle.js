/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./test/test.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/moo/moo.js":
/*!*********************************!*\
  !*** ./node_modules/moo/moo.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) /* global define */\n  } else {}\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n\n  // polyfill assign(), so we support IE9+\n  var assign = typeof Object.assign === 'function' ? Object.assign :\n    // https://tc39.github.io/ecma262/#sec-object.assign\n    function(target, sources) {\n      if (target == null) {\n        throw new TypeError('Target cannot be null or undefined');\n      }\n      target = Object(target)\n\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n        if (source == null) continue\n\n        for (var key in source) {\n          if (hasOwnProperty.call(source, key)) {\n            target[key] = source[key]\n          }\n        }\n      }\n      return target\n    }\n\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && o.constructor === RegExp }\n  function isObject(o) { return o && typeof o === 'object' && o.constructor !== RegExp && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) { throw new Error('RegExp /i flag not allowed') }\n      if (obj.global) { throw new Error('RegExp /g flag is implied') }\n      if (obj.sticky) { throw new Error('RegExp /y flag is implied') }\n      if (obj.multiline) { throw new Error('RegExp /m flag is implied') }\n      return obj.source\n\n    } else {\n      throw new Error('not a pattern: ' + obj)\n    }\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i=0; i<keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = Array.isArray(thing) ? thing : [thing]\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i=0; i<array.length; i++) {\n      var obj = array[i]\n      if (!obj.name) {\n        throw new Error('Rule has no name: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.name, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(name, obj) {\n    if (typeof obj !== 'object' || Array.isArray(obj) || isRegExp(obj)) {\n      obj = { match: obj }\n    }\n\n    // nb. error implies lineBreaks\n    var options = assign({\n      tokenType: name,\n      lineBreaks: !!obj.error,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      value: null,\n      getType: null,\n    }, obj)\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    if (options.keywords) {\n      options.getType = keywordTransform(options.keywords)\n    }\n    return options\n  }\n\n  function compileRules(rules, hasStates) {\n    rules = Array.isArray(rules) ? arrayToRules(rules) : objectToRules(rules)\n\n    var errorRule = null\n    var groups = []\n    var parts = []\n    for (var i=0; i<rules.length; i++) {\n      var options = rules[i]\n\n      if (options.error) {\n        if (errorRule) {\n          throw new Error(\"Multiple error rules not allowed: (for token '\" + options.tokenType + \"')\")\n        }\n        errorRule = options\n      }\n\n      // skip rules with no match\n      if (options.match.length === 0) {\n        continue\n      }\n      groups.push(options)\n\n      // convert to RegExp\n      var pat = reUnion(options.match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: … ) instead\")\n      }\n      if (!hasStates && (options.pop || options.push || options.next)) {\n        throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.tokenType + \"')\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n    var suffix = hasSticky ? '' : '|(?:)'\n    var flags = hasSticky ? 'ym' : 'gm'\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n\n    return {regexp: combined, groups: groups, error: errorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(rules)\n    return new Lexer({start: result}, 'start')\n  }\n\n  function compileStates(states, start) {\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var map = Object.create(null)\n    for (var i=0; i<keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(states[key], true)\n    }\n\n    for (var i=0; i<keys.length; i++) {\n      var groups = map[keys[i]].groups\n      for (var j=0; j<groups.length; j++) {\n        var g = groups[j]\n        var state = g && (g.push || g.next)\n        if (state && !map[state]) {\n          throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.tokenType + \"' of state '\" + keys[i] + \"')\")\n        }\n        if (g && g.pop && +g.pop !== 1) {\n          throw new Error(\"pop must be 1 (in token '\" + g.tokenType + \"' of state '\" + keys[i] + \"')\")\n        }\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n    var reverseMap = Object.create(null)\n    var byLength = Object.create(null)\n    var types = Object.getOwnPropertyNames(map)\n    for (var i=0; i<types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        (byLength[keyword.length] = byLength[keyword.length] || []).push(keyword)\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        reverseMap[keyword] = tokenType\n      })\n    }\n\n    // fast string lookup\n    // https://jsperf.com/string-lookups\n    function str(x) { return JSON.stringify(x) }\n    var source = ''\n    source += '(function(value) {\\n'\n    source += 'switch (value.length) {\\n'\n    for (var length in byLength) {\n      var keywords = byLength[length]\n      source += 'case ' + length + ':\\n'\n      source += 'switch (value) {\\n'\n      keywords.forEach(function(keyword) {\n        var tokenType = reverseMap[keyword]\n        source += 'case ' + str(keyword) + ': return ' + str(tokenType) + '\\n'\n      })\n      source += '}\\n'\n    }\n    source += '}\\n'\n    source += '})'\n    return eval(source) // getType\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.setState(info ? info.state : this.startState)\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error || {lineBreaks: true, shouldThrow: true}\n    this.re = info.regexp\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  Lexer.prototype._eat = hasSticky ? function(re) { // assume re is /y\n    return re.exec(this.buffer)\n  } : function(re) { // assume re is /g\n    var match = re.exec(this.buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    if (match === null) {\n      return -1\n    }\n\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return i\n      }\n    }\n    throw new Error('oops')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var re = this.re\n    var buffer = this.buffer\n\n    var index = re.lastIndex = this.index\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    var match = this._eat(re)\n    var i = this._getGroup(match)\n\n    var group, text\n    if (i === -1) {\n      group = this.error\n\n      // consume rest of buffer\n      text = buffer.slice(index)\n\n    } else {\n      text = match[0]\n      group = this.groups[i]\n    }\n\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (group.getType && group.getType(text)) || group.tokenType,\n      value: group.value ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: index,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      throw new Error(this.formatError(token, \"invalid syntax\"))\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    var value = token.value\n    var index = token.offset\n    var eol = token.lineBreaks ? value.indexOf('\\n') : value.length\n    var start = Math.max(0, index - token.col + 1)\n    var firstLine = this.buffer.substring(start, index + eol)\n    message += \" at line \" + token.line + \" col \" + token.col + \":\\n\\n\"\n    message += \"  \" + firstLine + \"\\n\"\n    message += \"  \" + Array(token.col).join(\" \") + \"^\"\n    return message\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    for (var s in this.states) {\n      var groups = this.states[s].groups\n      for (var i=0; i<groups.length; i++) {\n        var group = groups[i]\n        if (group.tokenType === tokenType) return true\n        if (group.keywords && hasOwnProperty.call(group.keywords, tokenType)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n  }\n\n}))\n\n\n//# sourceURL=webpack:///./node_modules/moo/moo.js?");

/***/ }),

/***/ "./node_modules/nearley/lib/nearley.js":
/*!*********************************************!*\
  !*** ./node_modules/nearley/lib/nearley.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        function stringifySymbolSequence (e) {\n            return e.literal ? JSON.stringify(e.literal) :\n                   e.type ? '%' + e.type : e.toString();\n        }\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(stringifySymbolSequence).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(stringifySymbolSequence).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(stringifySymbolSequence).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var line = buffer.substring(this.lastLineBreak, nextLineBreak)\n            var col = this.index - this.lastLineBreak;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += \"  \" + line + \"\\n\"\n            message += \"  \" + Array(col).join(\" \") + \"^\"\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n    }\n\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (token = lexer.next()) {\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var message = this.lexer.formatError(token, \"invalid syntax\") + \"\\n\";\n                message += \"Unexpected \" + (token.type ? token.type + \" token: \" : \"\");\n                message += JSON.stringify(token.value !== undefined ? token.value : token) + \"\\n\";\n                var err = new Error(message);\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/nearley/lib/nearley.js?");

/***/ }),

/***/ "./node_modules/tonal-array/build/es6.js":
/*!***********************************************!*\
  !*** ./node_modules/tonal-array/build/es6.js ***!
  \***********************************************/
/*! exports provided: range, rotate, compact, sort, unique, shuffle, permutations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"range\", function() { return range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate\", function() { return rotate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compact\", function() { return compact; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sort\", function() { return sort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unique\", function() { return unique; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shuffle\", function() { return shuffle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"permutations\", function() { return permutations; });\n/* harmony import */ var tonal_note__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tonal-note */ \"./node_modules/tonal-note/build/es6.js\");\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-array.svg?style=flat-square)](https://www.npmjs.com/package/tonal-array)\n *\n * Tonal array utilities. Create ranges, sort notes, ...\n *\n * @example\n * import * as Array;\n * Array.sort([\"f\", \"a\", \"c\"]) // => [\"C\", \"F\", \"A\"]\n *\n * @example\n * const Array = require(\"tonal-array)\n * Array.range(1, 4) // => [1, 2, 3, 4]\n *\n * @module Array\n */\n\n\n// ascending range\nfunction ascR(b, n) {\n  for (var a = []; n--; a[n] = n + b){ ; }\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  for (var a = []; n--; a[n] = b - n){ ; }\n  return a;\n}\n\n/**\n * Create a numeric range\n *\n * @param {Number} from\n * @param {Number} to\n * @return {Array}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nfunction range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b ? ascR(a, b - a + 1) : descR(a, a - b + 1);\n}\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nfunction rotate(times, arr) {\n  var len = arr.length;\n  var n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nvar compact = function (arr) { return arr.filter(function (n) { return n === 0 || n; }); };\n\n// a function that get note heights (with negative number for pitch classes)\nvar height = function (n) {\n  var m = Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"midi\"])(n);\n  return m !== null ? m : Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"midi\"])(n + \"-100\");\n};\n\n/**\n * Sort an array of notes in ascending order\n *\n * @param {String|Array} notes\n * @return {Array} sorted array of notes\n */\nfunction sort(src) {\n  return compact(src.map(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"name\"])).sort(function (a, b) { return height(a) > height(b); });\n}\n\n/**\n * Get sorted notes with duplicates removed\n *\n * @function\n * @param {Array} notes\n */\nfunction unique(arr) {\n  return sort(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @private\n * @function\n * @param {Array|String} arr - the array\n * @return {Array} the shuffled array\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"])\n */\nvar shuffle = function (arr, rnd) {\n  if ( rnd === void 0 ) rnd = Math.random;\n\n  var i, t;\n  var m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n};\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n */\nvar permutations = function (arr) {\n  if (arr.length === 0) { return [[]]; }\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        var newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n};\n\n\n//# sourceURL=webpack:///./node_modules/tonal-array/build/es6.js?");

/***/ }),

/***/ "./node_modules/tonal-chord/build/es6.js":
/*!***********************************************!*\
  !*** ./node_modules/tonal-chord/build/es6.js ***!
  \***********************************************/
/*! exports provided: names, props, intervals, notes, exists, supersets, subsets, tokenize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"names\", function() { return names; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"props\", function() { return props; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intervals\", function() { return intervals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notes\", function() { return notes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exists\", function() { return exists; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supersets\", function() { return supersets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subsets\", function() { return subsets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenize\", function() { return tokenize; });\n/* harmony import */ var tonal_note__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tonal-note */ \"./node_modules/tonal-note/build/es6.js\");\n/* harmony import */ var tonal_distance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tonal-distance */ \"./node_modules/tonal-distance/build/es6.js\");\n/* harmony import */ var tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tonal-dictionary */ \"./node_modules/tonal-dictionary/build/es6.js\");\n/* harmony import */ var tonal_pcset__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tonal-pcset */ \"./node_modules/tonal-pcset/build/es6.js\");\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-chord.svg)](https://www.npmjs.com/package/tonal-chord)\n * [![tonal](https://img.shields.io/badge/tonal-chord-yellow.svg)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-chord` is a collection of functions to manipulate musical chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Chord from \"tonal-chord\"\n * // es5\n * const Chord = require(\"tonal-chord\")\n *\n * @example\n * Chord.notes(\"CMaj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n *\n * @module Chord\n */\n\n\n\n\n\n/**\n * Return the available chord names\n *\n * @function\n * @param {boolean} aliases - true to include aliases\n * @return {Array} the chord names\n *\n * @example\n * Chord.names() // => [\"maj7\", ...]\n */\nvar names = tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"chord\"].names;\n\nvar NO_CHORD = Object.freeze({\n  name: null,\n  names: [],\n  intervals: [],\n  chroma: null,\n  setnum: null\n});\n\nvar properties = function (name) {\n  var intervals = Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"chord\"])(name);\n  if (!intervals) { return NO_CHORD; }\n  var s = { intervals: intervals, name: name };\n  s.chroma = Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_3__[\"chroma\"])(intervals);\n  s.setnum = parseInt(s.chroma, 2);\n  s.names = tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"chord\"].names(s.chroma);\n  return s;\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\n/**\n * Get chord properties. It returns an object with:\n *\n * - name: the chord name\n * - names: a list with all possible names (includes the current)\n * - intervals: an array with the chord intervals\n * - chroma:  chord croma (see pcset)\n * - setnum: chord chroma number\n *\n * @function\n * @param {String} name - the chord name (without tonic)\n * @return {Object} an object with the properties or a object with all properties\n * set to null if not valid chord name\n */\nvar props = memo(properties);\n\n/**\n * Get chord intervals. It always returns an array\n *\n * @function\n * @param {String} name - the chord name (optionally a tonic and type)\n * @return {Array<String>} a list of intervals or null if the type is not known\n */\nvar intervals = function (name) { return props(tokenize(name)[1]).intervals; };\n\n/**\n * Get the chord notes of a chord. This function accepts either a chord name\n * (for example: \"Cmaj7\") or a list of notes.\n *\n * It always returns an array, even if the chord is not found.\n *\n * @function\n * @param {String} nameOrTonic - name of the chord or the tonic (if the second parameter is present)\n * @param {String} [name] - (Optional) name if the first parameter is the tonic\n * @return {Array} an array of notes or an empty array\n *\n * @example\n * Chord.notes(\"Cmaj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n * Chord.notes(\"C\", \"maj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n */\nfunction notes(nameOrTonic, name) {\n  var p = tokenize(nameOrTonic);\n  name = name || p[1];\n  return props(name).intervals.map(Object(tonal_distance__WEBPACK_IMPORTED_MODULE_1__[\"transpose\"])(p[0]));\n}\n\n/**\n * Check if a given name correspond to a chord in the dictionary\n *\n * @function\n * @param {String} name\n * @return {Boolean}\n * @example\n * Chord.exists(\"CMaj7\") // => true\n * Chord.exists(\"Maj7\") // => true\n * Chord.exists(\"Ablah\") // => false\n */\nvar exists = function (name) { return Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"chord\"])(tokenize(name)[1]) !== undefined; };\n\n/**\n * Get all chords names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of chord names\n */\nvar supersets = function (name) {\n  if (!intervals(name).length) { return []; }\n  var isSuperset = Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_3__[\"isSupersetOf\"])(intervals(name));\n  return tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"chord\"].names().filter(function (name) { return isSuperset(Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"chord\"])(name)); });\n};\n\n/**\n * Find all chords names that are a subset of the given one\n * (has less notes but all from the given chord)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of chord names\n */\nvar subsets = function (name) {\n  var isSubset = Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_3__[\"isSubsetOf\"])(intervals(name));\n  return tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"chord\"].names().filter(function (name) { return isSubset(Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"chord\"])(name)); });\n};\n\n// 6, 64, 7, 9, 11 and 13 are consider part of the chord\n// (see https://github.com/danigb/tonal/issues/55)\nvar NUM_TYPES = /^(6|64|7|9|11|13)$/;\n/**\n * Tokenize a chord name. It returns an array with the tonic and chord type\n * If not tonic is found, all the name is considered the chord name.\n *\n * This function does NOT check if the chord type exists or not. It only tries\n * to split the tonic and chord type.\n *\n * @function\n * @param {String} name - the chord name\n * @return {Array} an array with [type, tonic]\n * @example\n * Chord.tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\n * Chord.tokenize(\"C7\") // => [ \"C\", \"7\" ]\n * Chord.tokenize(\"mMaj7\") // => [ \"\", \"mMaj7\" ]\n * Chord.tokenize(\"Cnonsense\") // => [ \"C\", \"nonsense\" ]\n */\nfunction tokenize(name) {\n  var p = Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"tokenize\"])(name);\n  if (p[0] === \"\") { return [\"\", name]; }\n  // aug is augmented (see https://github.com/danigb/tonal/issues/55)\n  if (p[0] === \"A\" && p[3] === \"ug\") { return [\"\", \"aug\"]; }\n\n  if (NUM_TYPES.test(p[2])) {\n    return [p[0] + p[1], p[2] + p[3]];\n  } else {\n    return [p[0] + p[1] + p[2], p[3]];\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/tonal-chord/build/es6.js?");

/***/ }),

/***/ "./node_modules/tonal-dictionary/build/data/chords.json":
/*!**************************************************************!*\
  !*** ./node_modules/tonal-dictionary/build/data/chords.json ***!
  \**************************************************************/
/*! exports provided: 4, 5, 7, 9, 11, 13, 64, M, M#5, M#5add9, M13, M13#11, M6, M6#11, M69, M69#11, M7#11, M7#5, M7#5sus4, M7#9#11, M7add13, M7b5, M7b6, M7b9, M7sus4, M9, M9#11, M9#5, M9#5sus4, M9b5, M9sus4, Madd9, Maj7, Mb5, Mb6, Msus2, Msus4, Maddb9, 11b9, 13#11, 13#9, 13#9#11, 13b5, 13b9, 13b9#11, 13no5, 13sus4, 69#11, 7#11, 7#11b13, 7#5, 7#5#9, 7#5b9, 7#5b9#11, 7#5sus4, 7#9, 7#9#11, 7#9#11b13, 7#9b13, 7add6, 7b13, 7b5, 7b6, 7b9, 7b9#11, 7b9#9, 7b9b13, 7b9b13#11, 7no5, 7sus4, 7sus4b9, 7sus4b9b13, 9#11, 9#11b13, 9#5, 9#5#11, 9b13, 9b5, 9no5, 9sus4, m, m#5, m11, m11A 5, m11b5, m13, m6, m69, m7, m7#5, m7add11, m7b5, m9, m9#5, m9b5, mMaj7, mMaj7b6, mM9, mM9b6, mb6M7, mb6b9, o, o7, o7M7, oM7, sus24, +add#9, madd4, madd9, default */
/***/ (function(module) {

eval("module.exports = {\"4\":[\"1P 4P 7m 10m\",[\"quartal\"]],\"5\":[\"1P 5P\"],\"7\":[\"1P 3M 5P 7m\",[\"Dominant\",\"Dom\"]],\"9\":[\"1P 3M 5P 7m 9M\",[\"79\"]],\"11\":[\"1P 5P 7m 9M 11P\"],\"13\":[\"1P 3M 5P 7m 9M 13M\",[\"13_\"]],\"64\":[\"5P 8P 10M\"],\"M\":[\"1P 3M 5P\",[\"Major\",\"\"]],\"M#5\":[\"1P 3M 5A\",[\"augmented\",\"maj#5\",\"Maj#5\",\"+\",\"aug\"]],\"M#5add9\":[\"1P 3M 5A 9M\",[\"+add9\"]],\"M13\":[\"1P 3M 5P 7M 9M 13M\",[\"maj13\",\"Maj13\"]],\"M13#11\":[\"1P 3M 5P 7M 9M 11A 13M\",[\"maj13#11\",\"Maj13#11\",\"M13+4\",\"M13#4\"]],\"M6\":[\"1P 3M 5P 13M\",[\"6\"]],\"M6#11\":[\"1P 3M 5P 6M 11A\",[\"M6b5\",\"6#11\",\"6b5\"]],\"M69\":[\"1P 3M 5P 6M 9M\",[\"69\"]],\"M69#11\":[\"1P 3M 5P 6M 9M 11A\"],\"M7#11\":[\"1P 3M 5P 7M 11A\",[\"maj7#11\",\"Maj7#11\",\"M7+4\",\"M7#4\"]],\"M7#5\":[\"1P 3M 5A 7M\",[\"maj7#5\",\"Maj7#5\",\"maj9#5\",\"M7+\"]],\"M7#5sus4\":[\"1P 4P 5A 7M\"],\"M7#9#11\":[\"1P 3M 5P 7M 9A 11A\"],\"M7add13\":[\"1P 3M 5P 6M 7M 9M\"],\"M7b5\":[\"1P 3M 5d 7M\"],\"M7b6\":[\"1P 3M 6m 7M\"],\"M7b9\":[\"1P 3M 5P 7M 9m\"],\"M7sus4\":[\"1P 4P 5P 7M\"],\"M9\":[\"1P 3M 5P 7M 9M\",[\"maj9\",\"Maj9\"]],\"M9#11\":[\"1P 3M 5P 7M 9M 11A\",[\"maj9#11\",\"Maj9#11\",\"M9+4\",\"M9#4\"]],\"M9#5\":[\"1P 3M 5A 7M 9M\",[\"Maj9#5\"]],\"M9#5sus4\":[\"1P 4P 5A 7M 9M\"],\"M9b5\":[\"1P 3M 5d 7M 9M\"],\"M9sus4\":[\"1P 4P 5P 7M 9M\"],\"Madd9\":[\"1P 3M 5P 9M\",[\"2\",\"add9\",\"add2\"]],\"Maj7\":[\"1P 3M 5P 7M\",[\"maj7\",\"M7\"]],\"Mb5\":[\"1P 3M 5d\"],\"Mb6\":[\"1P 3M 13m\"],\"Msus2\":[\"1P 2M 5P\",[\"add9no3\",\"sus2\"]],\"Msus4\":[\"1P 4P 5P\",[\"sus\",\"sus4\"]],\"Maddb9\":[\"1P 3M 5P 9m\"],\"11b9\":[\"1P 5P 7m 9m 11P\"],\"13#11\":[\"1P 3M 5P 7m 9M 11A 13M\",[\"13+4\",\"13#4\"]],\"13#9\":[\"1P 3M 5P 7m 9A 13M\",[\"13#9_\"]],\"13#9#11\":[\"1P 3M 5P 7m 9A 11A 13M\"],\"13b5\":[\"1P 3M 5d 6M 7m 9M\"],\"13b9\":[\"1P 3M 5P 7m 9m 13M\"],\"13b9#11\":[\"1P 3M 5P 7m 9m 11A 13M\"],\"13no5\":[\"1P 3M 7m 9M 13M\"],\"13sus4\":[\"1P 4P 5P 7m 9M 13M\",[\"13sus\"]],\"69#11\":[\"1P 3M 5P 6M 9M 11A\"],\"7#11\":[\"1P 3M 5P 7m 11A\",[\"7+4\",\"7#4\",\"7#11_\",\"7#4_\"]],\"7#11b13\":[\"1P 3M 5P 7m 11A 13m\",[\"7b5b13\"]],\"7#5\":[\"1P 3M 5A 7m\",[\"+7\",\"7aug\",\"aug7\"]],\"7#5#9\":[\"1P 3M 5A 7m 9A\",[\"7alt\",\"7#5#9_\",\"7#9b13_\"]],\"7#5b9\":[\"1P 3M 5A 7m 9m\"],\"7#5b9#11\":[\"1P 3M 5A 7m 9m 11A\"],\"7#5sus4\":[\"1P 4P 5A 7m\"],\"7#9\":[\"1P 3M 5P 7m 9A\",[\"7#9_\"]],\"7#9#11\":[\"1P 3M 5P 7m 9A 11A\",[\"7b5#9\"]],\"7#9#11b13\":[\"1P 3M 5P 7m 9A 11A 13m\"],\"7#9b13\":[\"1P 3M 5P 7m 9A 13m\"],\"7add6\":[\"1P 3M 5P 7m 13M\",[\"67\",\"7add13\"]],\"7b13\":[\"1P 3M 7m 13m\"],\"7b5\":[\"1P 3M 5d 7m\"],\"7b6\":[\"1P 3M 5P 6m 7m\"],\"7b9\":[\"1P 3M 5P 7m 9m\"],\"7b9#11\":[\"1P 3M 5P 7m 9m 11A\",[\"7b5b9\"]],\"7b9#9\":[\"1P 3M 5P 7m 9m 9A\"],\"7b9b13\":[\"1P 3M 5P 7m 9m 13m\"],\"7b9b13#11\":[\"1P 3M 5P 7m 9m 11A 13m\",[\"7b9#11b13\",\"7b5b9b13\"]],\"7no5\":[\"1P 3M 7m\"],\"7sus4\":[\"1P 4P 5P 7m\",[\"7sus\"]],\"7sus4b9\":[\"1P 4P 5P 7m 9m\",[\"susb9\",\"7susb9\",\"7b9sus\",\"7b9sus4\",\"phryg\"]],\"7sus4b9b13\":[\"1P 4P 5P 7m 9m 13m\",[\"7b9b13sus4\"]],\"9#11\":[\"1P 3M 5P 7m 9M 11A\",[\"9+4\",\"9#4\",\"9#11_\",\"9#4_\"]],\"9#11b13\":[\"1P 3M 5P 7m 9M 11A 13m\",[\"9b5b13\"]],\"9#5\":[\"1P 3M 5A 7m 9M\",[\"9+\"]],\"9#5#11\":[\"1P 3M 5A 7m 9M 11A\"],\"9b13\":[\"1P 3M 7m 9M 13m\"],\"9b5\":[\"1P 3M 5d 7m 9M\"],\"9no5\":[\"1P 3M 7m 9M\"],\"9sus4\":[\"1P 4P 5P 7m 9M\",[\"9sus\"]],\"m\":[\"1P 3m 5P\"],\"m#5\":[\"1P 3m 5A\",[\"m+\",\"mb6\"]],\"m11\":[\"1P 3m 5P 7m 9M 11P\",[\"_11\"]],\"m11A 5\":[\"1P 3m 6m 7m 9M 11P\"],\"m11b5\":[\"1P 3m 7m 12d 2M 4P\",[\"h11\",\"_11b5\"]],\"m13\":[\"1P 3m 5P 7m 9M 11P 13M\",[\"_13\"]],\"m6\":[\"1P 3m 4P 5P 13M\",[\"_6\"]],\"m69\":[\"1P 3m 5P 6M 9M\",[\"_69\"]],\"m7\":[\"1P 3m 5P 7m\",[\"minor7\",\"_\",\"_7\"]],\"m7#5\":[\"1P 3m 6m 7m\"],\"m7add11\":[\"1P 3m 5P 7m 11P\",[\"m7add4\"]],\"m7b5\":[\"1P 3m 5d 7m\",[\"half-diminished\",\"h7\",\"_7b5\"]],\"m9\":[\"1P 3m 5P 7m 9M\",[\"_9\"]],\"m9#5\":[\"1P 3m 6m 7m 9M\"],\"m9b5\":[\"1P 3m 7m 12d 2M\",[\"h9\",\"-9b5\"]],\"mMaj7\":[\"1P 3m 5P 7M\",[\"mM7\",\"_M7\"]],\"mMaj7b6\":[\"1P 3m 5P 6m 7M\",[\"mM7b6\"]],\"mM9\":[\"1P 3m 5P 7M 9M\",[\"mMaj9\",\"-M9\"]],\"mM9b6\":[\"1P 3m 5P 6m 7M 9M\",[\"mMaj9b6\"]],\"mb6M7\":[\"1P 3m 6m 7M\"],\"mb6b9\":[\"1P 3m 6m 9m\"],\"o\":[\"1P 3m 5d\",[\"mb5\",\"dim\"]],\"o7\":[\"1P 3m 5d 13M\",[\"diminished\",\"m6b5\",\"dim7\"]],\"o7M7\":[\"1P 3m 5d 6M 7M\"],\"oM7\":[\"1P 3m 5d 7M\"],\"sus24\":[\"1P 2M 4P 5P\",[\"sus4add9\"]],\"+add#9\":[\"1P 3M 5A 9A\"],\"madd4\":[\"1P 3m 4P 5P\"],\"madd9\":[\"1P 3m 5P 9M\"]};\n\n//# sourceURL=webpack:///./node_modules/tonal-dictionary/build/data/chords.json?");

/***/ }),

/***/ "./node_modules/tonal-dictionary/build/data/scales.json":
/*!**************************************************************!*\
  !*** ./node_modules/tonal-dictionary/build/data/scales.json ***!
  \**************************************************************/
/*! exports provided: chromatic, lydian, major, mixolydian, dorian, aeolian, phrygian, locrian, melodic minor, melodic minor second mode, lydian augmented, lydian dominant, melodic minor fifth mode, locrian #2, locrian major, altered, major pentatonic, lydian pentatonic, mixolydian pentatonic, locrian pentatonic, minor pentatonic, minor six pentatonic, minor hexatonic, flat three pentatonic, flat six pentatonic, major flat two pentatonic, whole tone pentatonic, ionian pentatonic, lydian #5P pentatonic, lydian dominant pentatonic, minor #7M pentatonic, super locrian pentatonic, in-sen, iwato, hirajoshi, kumoijoshi, pelog, vietnamese 1, vietnamese 2, prometheus, prometheus neopolitan, ritusen, scriabin, piongio, major blues, minor blues, composite blues, augmented, augmented heptatonic, dorian #4, lydian diminished, whole tone, leading whole tone, harmonic minor, lydian minor, neopolitan, neopolitan minor, neopolitan major, neopolitan major pentatonic, romanian minor, double harmonic lydian, diminished, harmonic major, double harmonic major, egyptian, hungarian minor, hungarian major, oriental, spanish, spanish heptatonic, flamenco, balinese, todi raga, malkos raga, kafi raga, purvi raga, persian, bebop, bebop dominant, bebop minor, bebop major, bebop locrian, minor bebop, mystery #1, enigmatic, minor six diminished, ionian augmented, lydian #9, ichikosucho, six tone symmetric, default */
/***/ (function(module) {

eval("module.exports = {\"chromatic\":[\"1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M\"],\"lydian\":[\"1P 2M 3M 4A 5P 6M 7M\"],\"major\":[\"1P 2M 3M 4P 5P 6M 7M\",[\"ionian\"]],\"mixolydian\":[\"1P 2M 3M 4P 5P 6M 7m\",[\"dominant\"]],\"dorian\":[\"1P 2M 3m 4P 5P 6M 7m\"],\"aeolian\":[\"1P 2M 3m 4P 5P 6m 7m\",[\"minor\"]],\"phrygian\":[\"1P 2m 3m 4P 5P 6m 7m\"],\"locrian\":[\"1P 2m 3m 4P 5d 6m 7m\"],\"melodic minor\":[\"1P 2M 3m 4P 5P 6M 7M\"],\"melodic minor second mode\":[\"1P 2m 3m 4P 5P 6M 7m\"],\"lydian augmented\":[\"1P 2M 3M 4A 5A 6M 7M\"],\"lydian dominant\":[\"1P 2M 3M 4A 5P 6M 7m\",[\"lydian b7\"]],\"melodic minor fifth mode\":[\"1P 2M 3M 4P 5P 6m 7m\",[\"hindu\",\"mixolydian b6M\"]],\"locrian #2\":[\"1P 2M 3m 4P 5d 6m 7m\"],\"locrian major\":[\"1P 2M 3M 4P 5d 6m 7m\",[\"arabian\"]],\"altered\":[\"1P 2m 3m 3M 5d 6m 7m\",[\"super locrian\",\"diminished whole tone\",\"pomeroy\"]],\"major pentatonic\":[\"1P 2M 3M 5P 6M\",[\"pentatonic\"]],\"lydian pentatonic\":[\"1P 3M 4A 5P 7M\",[\"chinese\"]],\"mixolydian pentatonic\":[\"1P 3M 4P 5P 7m\",[\"indian\"]],\"locrian pentatonic\":[\"1P 3m 4P 5d 7m\",[\"minor seven flat five pentatonic\"]],\"minor pentatonic\":[\"1P 3m 4P 5P 7m\"],\"minor six pentatonic\":[\"1P 3m 4P 5P 6M\"],\"minor hexatonic\":[\"1P 2M 3m 4P 5P 7M\"],\"flat three pentatonic\":[\"1P 2M 3m 5P 6M\",[\"kumoi\"]],\"flat six pentatonic\":[\"1P 2M 3M 5P 6m\"],\"major flat two pentatonic\":[\"1P 2m 3M 5P 6M\"],\"whole tone pentatonic\":[\"1P 3M 5d 6m 7m\"],\"ionian pentatonic\":[\"1P 3M 4P 5P 7M\"],\"lydian #5P pentatonic\":[\"1P 3M 4A 5A 7M\"],\"lydian dominant pentatonic\":[\"1P 3M 4A 5P 7m\"],\"minor #7M pentatonic\":[\"1P 3m 4P 5P 7M\"],\"super locrian pentatonic\":[\"1P 3m 4d 5d 7m\"],\"in-sen\":[\"1P 2m 4P 5P 7m\"],\"iwato\":[\"1P 2m 4P 5d 7m\"],\"hirajoshi\":[\"1P 2M 3m 5P 6m\"],\"kumoijoshi\":[\"1P 2m 4P 5P 6m\"],\"pelog\":[\"1P 2m 3m 5P 6m\"],\"vietnamese 1\":[\"1P 3m 4P 5P 6m\"],\"vietnamese 2\":[\"1P 3m 4P 5P 7m\"],\"prometheus\":[\"1P 2M 3M 4A 6M 7m\"],\"prometheus neopolitan\":[\"1P 2m 3M 4A 6M 7m\"],\"ritusen\":[\"1P 2M 4P 5P 6M\"],\"scriabin\":[\"1P 2m 3M 5P 6M\"],\"piongio\":[\"1P 2M 4P 5P 6M 7m\"],\"major blues\":[\"1P 2M 3m 3M 5P 6M\"],\"minor blues\":[\"1P 3m 4P 5d 5P 7m\",[\"blues\"]],\"composite blues\":[\"1P 2M 3m 3M 4P 5d 5P 6M 7m\"],\"augmented\":[\"1P 2A 3M 5P 5A 7M\"],\"augmented heptatonic\":[\"1P 2A 3M 4P 5P 5A 7M\"],\"dorian #4\":[\"1P 2M 3m 4A 5P 6M 7m\"],\"lydian diminished\":[\"1P 2M 3m 4A 5P 6M 7M\"],\"whole tone\":[\"1P 2M 3M 4A 5A 7m\"],\"leading whole tone\":[\"1P 2M 3M 4A 5A 7m 7M\"],\"harmonic minor\":[\"1P 2M 3m 4P 5P 6m 7M\"],\"lydian minor\":[\"1P 2M 3M 4A 5P 6m 7m\"],\"neopolitan\":[\"1P 2m 3m 4P 5P 6m 7M\"],\"neopolitan minor\":[\"1P 2m 3m 4P 5P 6m 7M\"],\"neopolitan major\":[\"1P 2m 3m 4P 5P 6M 7M\",[\"dorian b2\"]],\"neopolitan major pentatonic\":[\"1P 3M 4P 5d 7m\"],\"romanian minor\":[\"1P 2M 3m 5d 5P 6M 7m\"],\"double harmonic lydian\":[\"1P 2m 3M 4A 5P 6m 7M\"],\"diminished\":[\"1P 2M 3m 4P 5d 6m 6M 7M\"],\"harmonic major\":[\"1P 2M 3M 4P 5P 6m 7M\"],\"double harmonic major\":[\"1P 2m 3M 4P 5P 6m 7M\",[\"gypsy\"]],\"egyptian\":[\"1P 2M 4P 5P 7m\"],\"hungarian minor\":[\"1P 2M 3m 4A 5P 6m 7M\"],\"hungarian major\":[\"1P 2A 3M 4A 5P 6M 7m\"],\"oriental\":[\"1P 2m 3M 4P 5d 6M 7m\"],\"spanish\":[\"1P 2m 3M 4P 5P 6m 7m\",[\"phrygian major\"]],\"spanish heptatonic\":[\"1P 2m 3m 3M 4P 5P 6m 7m\"],\"flamenco\":[\"1P 2m 3m 3M 4A 5P 7m\"],\"balinese\":[\"1P 2m 3m 4P 5P 6m 7M\"],\"todi raga\":[\"1P 2m 3m 4A 5P 6m 7M\"],\"malkos raga\":[\"1P 3m 4P 6m 7m\"],\"kafi raga\":[\"1P 3m 3M 4P 5P 6M 7m 7M\"],\"purvi raga\":[\"1P 2m 3M 4P 4A 5P 6m 7M\"],\"persian\":[\"1P 2m 3M 4P 5d 6m 7M\"],\"bebop\":[\"1P 2M 3M 4P 5P 6M 7m 7M\"],\"bebop dominant\":[\"1P 2M 3M 4P 5P 6M 7m 7M\"],\"bebop minor\":[\"1P 2M 3m 3M 4P 5P 6M 7m\"],\"bebop major\":[\"1P 2M 3M 4P 5P 5A 6M 7M\"],\"bebop locrian\":[\"1P 2m 3m 4P 5d 5P 6m 7m\"],\"minor bebop\":[\"1P 2M 3m 4P 5P 6m 7m 7M\"],\"mystery #1\":[\"1P 2m 3M 5d 6m 7m\"],\"enigmatic\":[\"1P 2m 3M 5d 6m 7m 7M\"],\"minor six diminished\":[\"1P 2M 3m 4P 5P 6m 6M 7M\"],\"ionian augmented\":[\"1P 2M 3M 4P 5A 6M 7M\"],\"lydian #9\":[\"1P 2m 3M 4A 5P 6M 7M\"],\"ichikosucho\":[\"1P 2M 3M 4P 5d 5P 6M 7M\"],\"six tone symmetric\":[\"1P 2m 3M 4P 5A 6M\"]};\n\n//# sourceURL=webpack:///./node_modules/tonal-dictionary/build/data/scales.json?");

/***/ }),

/***/ "./node_modules/tonal-dictionary/build/es6.js":
/*!****************************************************!*\
  !*** ./node_modules/tonal-dictionary/build/es6.js ***!
  \****************************************************/
/*! exports provided: dictionary, combine, scale, chord, pcset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dictionary\", function() { return dictionary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"combine\", function() { return combine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chord\", function() { return chord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pcset\", function() { return pcset; });\n/* harmony import */ var _data_scales_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data/scales.json */ \"./node_modules/tonal-dictionary/build/data/scales.json\");\nvar _data_scales_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./data/scales.json */ \"./node_modules/tonal-dictionary/build/data/scales.json\", 1);\n/* harmony import */ var _data_chords_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data/chords.json */ \"./node_modules/tonal-dictionary/build/data/chords.json\");\nvar _data_chords_json__WEBPACK_IMPORTED_MODULE_1___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./data/chords.json */ \"./node_modules/tonal-dictionary/build/data/chords.json\", 1);\n/* harmony import */ var tonal_pcset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tonal-pcset */ \"./node_modules/tonal-pcset/build/es6.js\");\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-dictionary.svg)](https://www.npmjs.com/package/tonal-dictionary)\n *\n * `tonal-dictionary` contains a dictionary of musical scales and chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Dictionary from \"tonal-dictionary\"\n * // es5\n * const Dictionary = require(\"tonal-dictionary\")\n *\n * @example\n * Dictionary.chord(\"Maj7\") // => [\"1P\", \"3M\", \"5P\", \"7M\"]\n *\n * @module Dictionary\n */\n\n\n\n\nvar dictionary = function (raw) {\n  var keys = Object.keys(raw).sort();\n  var data = [];\n  var index = [];\n\n  var add = function (name, ivls, chroma) {\n    data[name] = ivls;\n    index[chroma] = index[chroma] || [];\n    index[chroma].push(name);\n  };\n\n  keys.forEach(function (key) {\n    var ivls = raw[key][0].split(\" \");\n    var alias = raw[key][1];\n    var chr = Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_2__[\"chroma\"])(ivls);\n\n    add(key, ivls, chr);\n    if (alias) { alias.forEach(function (a) { return add(a, ivls, chr); }); }\n  });\n  var allKeys = Object.keys(data).sort();\n\n  var dict = function (name) { return data[name]; };\n  dict.names = function (p) {\n    if (typeof p === \"string\") { return (index[p] || []).slice(); }\n    else { return (p === true ? allKeys : keys).slice(); }\n  };\n  return dict;\n};\n\nvar combine = function (a, b) {\n  var dict = function (name) { return a(name) || b(name); };\n  dict.names = function (p) { return a.names(p).concat(b.names(p)); };\n  return dict;\n};\n\n/**\n * A dictionary of scales: a function that given a scale name (without tonic)\n * returns an array of intervals\n *\n * @function\n * @param {String} name\n * @return {Array} intervals\n * @example\n * import { scale } from \"tonal-dictionary\"\n * scale(\"major\") // => [\"1P\", \"2M\", ...]\n * scale.names(); // => [\"major\", ...]\n */\nvar scale = dictionary(_data_scales_json__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * A dictionary of chords: a function that given a chord type\n * returns an array of intervals\n *\n * @function\n * @param {String} type\n * @return {Array} intervals\n * @example\n * import { chord } from \"tonal-dictionary\"\n * chord(\"Maj7\") // => [\"1P\", \"3M\", ...]\n * chord.names(); // => [\"Maj3\", ...]\n */\nvar chord = dictionary(_data_chords_json__WEBPACK_IMPORTED_MODULE_1__);\nvar pcset = combine(scale, chord);\n\n\n//# sourceURL=webpack:///./node_modules/tonal-dictionary/build/es6.js?");

/***/ }),

/***/ "./node_modules/tonal-distance/build/es6.js":
/*!**************************************************!*\
  !*** ./node_modules/tonal-distance/build/es6.js ***!
  \**************************************************/
/*! exports provided: transpose, trFifths, fifths, transposeBy, addIntervals, add, subtract, interval, semitones */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transpose\", function() { return transpose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trFifths\", function() { return trFifths; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fifths\", function() { return fifths; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transposeBy\", function() { return transposeBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addIntervals\", function() { return addIntervals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interval\", function() { return interval; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"semitones\", function() { return semitones; });\n/* harmony import */ var tonal_note__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tonal-note */ \"./node_modules/tonal-note/build/es6.js\");\n/* harmony import */ var tonal_interval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tonal-interval */ \"./node_modules/tonal-interval/build/es6.js\");\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-distance.svg)](https://www.npmjs.com/package/tonal-distance)\n * [![tonal](https://img.shields.io/badge/tonal-distance-yellow.svg)](https://github.com/danigb/tonal/tree/master/packages/tonal/distance)\n *\n * Transpose notes by intervals and find distances between notes\n *\n * @example\n * // es6\n * import * as Distance from \"tonal-distance\"\n * Distance.interval(\"C3\", \"C4\") // => \"1P\"\n *\n * @example\n * // es6 import selected functions\n * import { interval, semitones, transpose } from \"tonal-distance\"\n *\n * semitones(\"C\" ,\"D\") // => 2\n * interval(\"C4\", \"G4\") // => \"5P\"\n * transpose(\"C4\", \"P5\") // => \"G4\"\n *\n * @example\n * // included in tonal facade\n * const Tonal = require(\"tonal\");\n * Tonal.Distance.transpose(\"C4\", \"P5\")\n * Tonal.Distance.transposeBy(\"P5\", \"C4\")\n *\n * @module Distance\n */\n\n\n\n// Map from letter step to number of fifths starting from \"C\":\n// { C: 0, D: 2, E: 4, F: -1, G: 1, A: 3, B: 5 }\nvar FIFTHS = [0, 2, 4, -1, 1, 3, 5];\n\n// Given a number of fifths, return the octaves they span\nvar fOcts = function (f) { return Math.floor(f * 7 / 12); };\n\n// Get the number of octaves it span each step\nvar FIFTH_OCTS = FIFTHS.map(fOcts);\n\nvar encode = function (ref) {\n  var step = ref.step;\n  var alt = ref.alt;\n  var oct = ref.oct;\n  var dir = ref.dir; if ( dir === void 0 ) dir = 1;\n\n  var f = FIFTHS[step] + 7 * alt;\n  if (oct === null) { return [dir * f]; }\n  var o = oct - FIFTH_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n};\n\n// We need to get the steps from fifths\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\n// We add 1 to fifths to avoid negative numbers, so:\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\nvar STEPS = [3, 0, 4, 1, 5, 2, 6];\n\n// Return the number of fifths as if it were unaltered\nfunction unaltered(f) {\n  var i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n\nvar decode = function (f, o, dir) {\n  var step = STEPS[unaltered(f)];\n  var alt = Math.floor((f + 1) / 7);\n  if (o === undefined) { return { step: step, alt: alt, dir: dir }; }\n  var oct = o + 4 * alt + FIFTH_OCTS[step];\n  return { step: step, alt: alt, oct: oct, dir: dir };\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\nvar encoder = function (props) { return memo(function (str) {\n    var p = props(str);\n    return p.name === null ? null : encode(p);\n  }); };\n\nvar encodeNote = encoder(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"props\"]);\nvar encodeIvl = encoder(tonal_interval__WEBPACK_IMPORTED_MODULE_1__[\"props\"]);\n\n/**\n * Transpose a note by an interval. The note can be a pitch class.\n *\n * This function can be partially applied.\n *\n * @param {String} note\n * @param {String} interval\n * @return {String} the transposed note\n * @example\n * import { tranpose } from \"tonal-distance\"\n * transpose(\"d3\", \"3M\") // => \"F#3\"\n * // it works with pitch classes\n * transpose(\"D\", \"3M\") // => \"F#\"\n * // can be partially applied\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(transpose(\"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\n */\nfunction transpose(note, interval) {\n  if (arguments.length === 1) { return function (i) { return transpose(note, i); }; }\n  var n = encodeNote(note);\n  var i = encodeIvl(interval);\n  if (n === null || i === null) { return null; }\n  var tr = n.length === 1 ? [n[0] + i[0]] : [n[0] + i[0], n[1] + i[1]];\n  return Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"build\"])(decode(tr[0], tr[1]));\n}\n\n/**\n * Transpose a pitch class by a number of perfect fifths.\n *\n * It can be partially applied.\n *\n * @function\n * @param {String} pitchClass - the pitch class\n * @param {Integer} fifhts - the number of fifths\n * @return {String} the transposed pitch class\n *\n * @example\n * import { trFifths } from \"tonal-transpose\"\n * [0, 1, 2, 3, 4].map(trFifths(\"C\")) // => [\"C\", \"G\", \"D\", \"A\", \"E\"]\n * // or using tonal\n * Distance.trFifths(\"G4\", 1) // => \"D\"\n */\n\nfunction trFifths(note, fifths) {\n  if (arguments.length === 1) { return function (f) { return trFifths(note, f); }; }\n  var n = encodeNote(note);\n  if (n === null) { return null; }\n  return Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"build\"])(decode(n[0] + fifths));\n}\n\n/**\n * Get the distance in fifths between pitch classes\n *\n * Can be partially applied.\n *\n * @param {String} to - note or pitch class\n * @param {String} from - note or pitch class\n */\nfunction fifths(from, to) {\n  if (arguments.length === 1) { return function (to) { return fifths(from, to); }; }\n  var f = encodeNote(from);\n  var t = encodeNote(to);\n  if (t === null || f === null) { return null; }\n  return t[0] - f[0];\n}\n\n/**\n * The same as transpose with the arguments inverted.\n *\n * Can be partially applied.\n *\n * @param {String} note\n * @param {String} interval\n * @return {String} the transposed note\n * @example\n * import { tranposeBy } from \"tonal-distance\"\n * transposeBy(\"3m\", \"5P\") // => \"7m\"\n */\nfunction transposeBy(interval, note) {\n  if (arguments.length === 1) { return function (n) { return transpose(n, interval); }; }\n  return transpose(note, interval);\n}\n\nvar isDescending = function (e) { return e[0] * 7 + e[1] * 12 < 0; };\nvar decodeIvl = function (i) { return isDescending(i) ? decode(-i[0], -i[1], -1) : decode(i[0], i[1], 1); };\n\nfunction addIntervals(ivl1, ivl2, dir) {\n  var i1 = encodeIvl(ivl1);\n  var i2 = encodeIvl(ivl2);\n  if (i1 === null || i2 === null) { return null; }\n  var i = [i1[0] + dir * i2[0], i1[1] + dir * i2[1]];\n  return Object(tonal_interval__WEBPACK_IMPORTED_MODULE_1__[\"build\"])(decodeIvl(i));\n}\n\n/**\n * Add two intervals\n *\n * Can be partially applied.\n *\n * @param {String} interval1\n * @param {String} interval2\n * @return {String} the resulting interval\n * @example\n * import { add } from \"tonal-distance\"\n * add(\"3m\", \"5P\") // => \"7m\"\n */\nfunction add(ivl1, ivl2) {\n  if (arguments.length === 1) { return function (i2) { return add(ivl1, i2); }; }\n  return addIntervals(ivl1, ivl2, 1);\n}\n\n/**\n * Subtract two intervals\n *\n * Can be partially applied\n *\n * @param {String} minuend\n * @param {String} subtrahend\n * @return {String} interval diference\n */\nfunction subtract(ivl1, ivl2) {\n  if (arguments.length === 1) { return function (i2) { return add(ivl1, i2); }; }\n  return addIntervals(ivl1, ivl2, -1);\n}\n\n/**\n * Find the interval between two pitches. It works with pitch classes\n * (both must be pitch classes and the interval is always ascending)\n *\n * Can be partially applied\n *\n * @param {String} from - distance from\n * @param {String} to - distance to\n * @return {String} the interval distance\n *\n * @example\n * import { interval } from \"tonal-distance\"\n * interval(\"C2\", \"C3\") // => \"P8\"\n * interval(\"G\", \"B\") // => \"M3\"\n *\n * @example\n * import * as Distance from \"tonal-distance\"\n * Distance.interval(\"M2\", \"P5\") // => \"P4\"\n */\nfunction interval(from, to) {\n  if (arguments.length === 1) { return function (t) { return interval(from, t); }; }\n  var f = encodeNote(from);\n  var t = encodeNote(to);\n  if (f === null || t === null || f.length !== t.length) { return null; }\n  var d =\n    f.length === 1\n      ? [t[0] - f[0], -Math.floor((t[0] - f[0]) * 7 / 12)]\n      : [t[0] - f[0], t[1] - f[1]];\n  return Object(tonal_interval__WEBPACK_IMPORTED_MODULE_1__[\"build\"])(decodeIvl(d));\n}\n\n/**\n * Get the distance between two notes in semitones\n *\n * @param {String|Pitch} from - first note\n * @param {String|Pitch} to - last note\n * @return {Integer} the distance in semitones or null if not valid notes\n * @example\n * import { semitones } from \"tonal-distance\"\n * semitones(\"C3\", \"A2\") // => -3\n * // or use tonal\n * Tonal.Distance.semitones(\"C3\", \"G3\") // => 7\n */\nfunction semitones(from, to) {\n  if (arguments.length === 1) { return function (t) { return semitones(from, t); }; }\n  var f = Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"props\"])(from);\n  var t = Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"props\"])(to);\n  return f.midi !== null && t.midi !== null\n    ? t.midi - f.midi\n    : f.chroma !== null && t.chroma !== null\n      ? (t.chroma - f.chroma + 12) % 12\n      : null;\n}\n\n\n//# sourceURL=webpack:///./node_modules/tonal-distance/build/es6.js?");

/***/ }),

/***/ "./node_modules/tonal-interval/build/es6.js":
/*!**************************************************!*\
  !*** ./node_modules/tonal-interval/build/es6.js ***!
  \**************************************************/
/*! exports provided: names, tokenize, props, num, name, semitones, chroma, ic, build, simplify, invert, fromSemitones */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"names\", function() { return names; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenize\", function() { return tokenize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"props\", function() { return props; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"num\", function() { return num; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"name\", function() { return name; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"semitones\", function() { return semitones; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chroma\", function() { return chroma; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ic\", function() { return ic; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"build\", function() { return build; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"simplify\", function() { return simplify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invert\", function() { return invert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromSemitones\", function() { return fromSemitones; });\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-interval.svg)](https://www.npmjs.com/package/tonal-interval)\n * [![tonal](https://img.shields.io/badge/tonal-interval-yellow.svg)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-interval` is a collection of functions to create and manipulate music intervals.\n *\n * The intervals are strings in shorthand notation. Two variations are supported:\n *\n * - standard shorthand notation: type and number, for example: \"M3\", \"d-4\"\n * - inverse shorthand notation: number and then type, for example: \"3M\", \"-4d\"\n *\n * The problem with the standard shorthand notation is that some strings can be\n * parsed as notes or intervals, for example: \"A4\" can be note A in 4th octave\n * or an augmented four. To remove ambiguity, the prefered notation in tonal is the\n * inverse shortand notation.\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * ## Usage\n *\n * ```js\n * // es6\n * import * as Interval from \"tonal-interval\"\n * // es5\n * const Interval = require(\"tonal-interval\")\n * // part of tonal\n * import { Interval } from \"tonal\"\n *\n * Interval.semitones(\"4P\") // => 5\n * Interval.invert(\"3m\") // => \"6M\"\n * Interval.simplify(\"9m\") // => \"2m\"\n * ```\n *\n * ## Install\n *\n * [![npm install tonal-interval](https://nodei.co/npm/tonal-interval.png?mini=true)](https://npmjs.org/package/tonal-interval/)\n *\n * ## API Documentation\n *\n * @module Interval\n */\n// shorthand tonal notation (with quality after number)\nvar IVL_TNL = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\n// standard shorthand notation (with quality before number)\nvar IVL_STR = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nvar REGEX = new RegExp(\"^\" + IVL_TNL + \"|\" + IVL_STR + \"$\");\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\nvar TYPES = \"PMMPPMM\";\nvar CLASSES = [0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1];\nvar NAMES = \"1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P\".split(\" \");\n\n/**\n * List basic (perfect, major, minor) interval names within a octave\n * @param {String} qualities - (Optional, default \"PMm\") the valid types\n * @return {Array} the interval names\n * @example\n * Interval.names() // => [ \"1P\", \"2m\", \"2M\", \"3m\", \"3M\", \"4P\", \"5P\", \"6m\", \"6M\", \"7m\", \"7M\", \"8P\" ]\n * Interval.names(\"P\") // => [ \"1P\", \"4P\", \"5P\", \"8P\" ]\n * Interval.names(\"PM\") // => [ \"1P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\n * Interval.names(\"Pm\") // => [ \"1P\", \"2m\", \"3m\", \"4P\", \"5P\", \"6m\", \"7m\", \"8P\" ]\n * Interval.names(\"d\") // => []\n */\nvar names = function (types) { return typeof types !== \"string\"\n    ? NAMES.slice()\n    : NAMES.filter(function (n) { return types.indexOf(n[1]) !== -1; }); };\n\nvar tokenize = function (str) {\n  var m = REGEX.exec(str);\n  return m === null ? null : m[1] ? [m[1], m[2]] : [m[4], m[3]];\n};\n\nvar NO_IVL = Object.freeze({\n  name: null,\n  num: null,\n  q: null,\n  step: null,\n  alt: null,\n  dir: null,\n  type: null,\n  simple: null,\n  semitones: null,\n  chroma: null\n});\n\nvar fillStr = function (s, n) { return Array(Math.abs(n) + 1).join(s); };\n\nvar qToAlt = function (type, q) {\n  if (q === \"M\" && type === \"M\") { return 0; }\n  if (q === \"P\" && type === \"P\") { return 0; }\n  if (q === \"m\" && type === \"M\") { return -1; }\n  if (/^A+$/.test(q)) { return q.length; }\n  if (/^d+$/.test(q)) { return type === \"P\" ? -q.length : -q.length - 1; }\n  return null;\n};\n\nvar altToQ = function (type, alt) {\n  if (alt === 0) { return type === \"M\" ? \"M\" : \"P\"; }\n  else if (alt === -1 && type === \"M\") { return \"m\"; }\n  else if (alt > 0) { return fillStr(\"A\", alt); }\n  else if (alt < 0) { return fillStr(\"d\", type === \"P\" ? alt : alt + 1); }\n  else { return null; }\n};\n\nvar numToStep = function (num) { return (Math.abs(num) - 1) % 7; };\n\nvar properties = function (str) {\n  var t = tokenize(str);\n  if (t === null) { return NO_IVL; }\n  var p = { num: +t[0], q: t[1] };\n  p.step = numToStep(p.num);\n  p.type = TYPES[p.step];\n  if (p.type === \"M\" && p.q === \"P\") { return NO_IVL; }\n\n  p.name = \"\" + p.num + p.q;\n  p.dir = p.num < 0 ? -1 : 1;\n  p.simple = p.num === 8 || p.num === -8 ? p.num : p.dir * (p.step + 1);\n  p.alt = qToAlt(p.type, p.q);\n  p.oct = Math.floor((Math.abs(p.num) - 1) / 7);\n  p.semitones = p.dir * (SIZES[p.step] + p.alt + 12 * p.oct);\n  p.chroma = ((p.dir * (SIZES[p.step] + p.alt)) % 12 + 12) % 12;\n  return Object.freeze(p);\n};\n\nvar cache = {};\n/**\n * Get interval properties. It returns an object with:\n *\n * - name: name\n * - num: number\n * - q: quality\n * - step: step\n * - alt: alteration\n * - dir: direction (1 ascending, -1 descending)\n * - type: \"P\" or \"M\" for perfectable or majorable\n * - simple: the simplified number\n * - semitones: the size in semitones\n * - chroma: the interval chroma\n * - ic: the interval class\n *\n * @function\n * @param {String} interval - the interval\n * @return {Object} the interval in the form [number, alt]\n */\nfunction props(str) {\n  if (typeof str !== \"string\") { return NO_IVL; }\n  return cache[str] || (cache[str] = properties(str));\n}\n\n/**\n * Get the number of the interval\n *\n * @function\n * @param {String} interval - the interval\n * @return {Integer}\n * @example\n * Interval.num(\"m2\") // => 2\n * Interval.num(\"P9\") // => 9\n * Interval.num(\"P-4\") // => -4\n */\nvar num = function (str) { return props(str).num; };\n\n/**\n * Get interval name. Can be used to test if it\"s an interval. It accepts intervals\n * as pitch or string in shorthand notation or tonal notation. It returns always\n * intervals in tonal notation.\n *\n * @function\n * @param {String} interval - the interval string or array\n * @return {String} the interval name or null if not valid interval\n * @example\n * Interval.name(\"m-3\") // => \"-3m\"\n * Interval.name(\"3\") // => null\n */\nvar name = function (str) { return props(str).name; };\n\n/**\n * Get size in semitones of an interval\n *\n * @function\n * @param {String} ivl\n * @return {Integer} the number of semitones or null if not an interval\n * @example\n * import { semitones } from \"tonal-interval\"\n * semitones(\"P4\") // => 5\n * // or using tonal\n * Tonal.Interval.semitones(\"P5\") // => 7\n */\nvar semitones = function (str) { return props(str).semitones; };\n\n/**\n * Get the chroma of the interval. The chroma is a number between 0 and 7\n * that represents the position within an octave (pitch set)\n *\n * @function\n * @param {String} str\n * @return {Number}\n */\nvar chroma = function (str) { return props(str).chroma; };\n\n/**\n * Get the [interval class](https://en.wikipedia.org/wiki/Interval_class)\n * number of a given interval.\n *\n * In musical set theory, an interval class is the shortest distance in\n * pitch class space between two unordered pitch classes\n *\n * @function\n * @param {String|Integer} interval - the interval or the number of semitones\n * @return {Integer} A value between 0 and 6\n *\n * @example\n * Interval.ic(\"P8\") // => 0\n * Interval.ic(\"m6\") // => 4\n * Interval.ic(10) // => 2\n * [\"P1\", \"M2\", \"M3\", \"P4\", \"P5\", \"M6\", \"M7\"].map(ic) // => [0, 2, 4, 5, 5, 3, 1]\n */\nvar ic = function (ivl) {\n  if (typeof ivl === \"string\") { ivl = props(ivl).chroma; }\n  return typeof ivl === \"number\" ? CLASSES[ivl % 12] : null;\n};\n\n/**\n * Given a interval property object, get the interval name\n *\n * The properties must contain a `num` *or* `step`, and `alt`:\n *\n * - num: the interval number\n * - step: the interval step (overrides the num property)\n * - alt: the interval alteration\n * - oct: (Optional) the number of octaves\n * - dir: (Optional) the direction\n *\n * @function\n * @param {Object} props - the interval property object\n *\n * @return {String} the interval name\n * @example\n * Interval.build({ step: 1, alt: -1, oct: 0, dir: 1 }) // => \"1d\"\n * Interval.build({ num: 9, alt: -1 }) // => \"9m\"\n */\nvar build = function (ref) {\n  if ( ref === void 0 ) ref = {};\n  var num = ref.num;\n  var step = ref.step;\n  var alt = ref.alt;\n  var oct = ref.oct; if ( oct === void 0 ) oct = 1;\n  var dir = ref.dir;\n\n  if (step !== undefined) { num = step + 1 + 7 * oct; }\n  if (num === undefined) { return null; }\n\n  var d = dir < 0 ? \"-\" : \"\";\n  var type = TYPES[numToStep(num)];\n  return d + num + altToQ(type, alt);\n};\n\n/**\n * Get the simplified version of an interval.\n *\n * @function\n * @param {String} interval - the interval to simplify\n * @return {String} the simplified interval\n *\n * @example\n * Interval.simplify(\"9M\") // => \"2M\"\n * [\"8P\", \"9M\", \"10M\", \"11P\", \"12P\", \"13M\", \"14M\", \"15P\"].map(Interval.simplify)\n * // => [ \"8P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\n * Interval.simplify(\"2M\") // => \"2M\"\n * Interval.simplify(\"-2M\") // => \"7m\"\n */\nvar simplify = function (str) {\n  var p = props(str);\n  if (p === NO_IVL) { return null; }\n  return p.simple + p.q;\n};\n\n/**\n * Get the inversion (https://en.wikipedia.org/wiki/Inversion_(music)#Intervals)\n * of an interval.\n *\n * @function\n * @param {String} interval - the interval to invert in interval shorthand\n * notation or interval array notation\n * @return {String} the inverted interval\n *\n * @example\n * Interval.invert(\"3m\") // => \"6M\"\n * Interval.invert(\"2M\") // => \"7m\"\n */\nvar invert = function (str) {\n  var p = props(str);\n  if (p === NO_IVL) { return null; }\n  var step = (7 - p.step) % 7;\n  var alt = p.type === \"P\" ? -p.alt : -(p.alt + 1);\n  return build({ step: step, alt: alt, oct: p.oct, dir: p.dir });\n};\n\n// interval numbers\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\n// interval qualities\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\n\n/**\n * Get interval name from semitones number. Since there are several interval\n * names for the same number, the name it\"s arbitraty, but deterministic.\n *\n * @function\n * @param {Integer} num - the number of semitones (can be negative)\n * @return {String} the interval name\n * @example\n * import { fromSemitones } from \"tonal-interval\"\n * fromSemitones(7) // => \"5P\"\n * // or using tonal\n * Tonal.Distance.fromSemitones(-7) // => \"-5P\"\n */\nvar fromSemitones = function (num) {\n  var d = num < 0 ? -1 : 1;\n  var n = Math.abs(num);\n  var c = n % 12;\n  var o = Math.floor(n / 12);\n  return d * (IN[c] + 7 * o) + IQ[c];\n};\n\n\n//# sourceURL=webpack:///./node_modules/tonal-interval/build/es6.js?");

/***/ }),

/***/ "./node_modules/tonal-note/build/es6.js":
/*!**********************************************!*\
  !*** ./node_modules/tonal-note/build/es6.js ***!
  \**********************************************/
/*! exports provided: names, tokenize, props, name, pc, midi, midiToFreq, freq, freqToMidi, chroma, oct, stepToLetter, altToAcc, from, build, fromMidi, simplify, enharmonic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"names\", function() { return names; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenize\", function() { return tokenize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"props\", function() { return props; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"name\", function() { return name; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pc\", function() { return pc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"midi\", function() { return midi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"midiToFreq\", function() { return midiToFreq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"freq\", function() { return freq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"freqToMidi\", function() { return freqToMidi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chroma\", function() { return chroma; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"oct\", function() { return oct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stepToLetter\", function() { return stepToLetter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"altToAcc\", function() { return altToAcc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"from\", function() { return from; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"build\", function() { return build; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromMidi\", function() { return fromMidi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"simplify\", function() { return simplify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enharmonic\", function() { return enharmonic; });\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-note.svg)](https://www.npmjs.com/package/tonal-note)\n * [![tonal](https://img.shields.io/badge/tonal-note-yellow.svg)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-note` is a collection of functions to manipulate musical notes in scientific notation\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * ## Usage\n *\n * ```js\n * import * as Note from \"tonal-note\"\n * // or const Note = require(\"tonal-note\")\n * Note.name(\"bb2\") // => \"Bb2\"\n * Note.chroma(\"bb2\") // => 10\n * Note.midi(\"a4\") // => 69\n * Note.freq(\"a4\") // => 440\n * Note.oct(\"G3\") // => 3\n *\n * // part of tonal\n * const Tonal = require(\"tonal\")\n * // or import Note from \"tonal\"\n * Tonal.Note.midi(\"d4\") // => 62\n * ```\n *\n * ## Install\n *\n * [![npm install tonal-note](https://nodei.co/npm/tonal-note.png?mini=true)](https://npmjs.org/package/tonal-note/)\n *\n * ## API Documentation\n *\n * @module Note\n */\n\nvar NAMES = \"C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B\".split(\" \");\n\n/**\n * Get a list of note names (pitch classes) within a octave\n *\n * @param {string} accTypes - (Optional, by default \" b#\"). A string with the\n * accidentals types: \" \" means no accidental, \"#\" means sharps, \"b\" mean flats,\n * can be conbined (see examples)\n * @return {Array}\n * @example\n * Note.names(\" b\") // => [ \"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\" ]\n * Note.names(\" #\") // => [ \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\" ]\n */\nvar names = function (accTypes) { return typeof accTypes !== \"string\"\n    ? NAMES.slice()\n    : NAMES.filter(function (n) {\n        var acc = n[1] || \" \";\n        return accTypes.indexOf(acc) !== -1;\n      }); };\n\nvar SHARPS = names(\" #\");\nvar FLATS = names(\" b\");\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\n\n/**\n * Split a string into tokens related to note parts.\n * It returns an array of strings `[letter, accidental, octave, modifier]`\n *\n * It always returns an array\n *\n * @param {String} str\n * @return {Array} an array of note tokens\n * @example\n * Note.tokenize(\"C#2\") // => [\"C\", \"#\", \"2\", \"\"]\n * Note.tokenize(\"Db3 major\") // => [\"D\", \"b\", \"3\", \"major\"]\n * Note.tokenize(\"major\") // => [\"\", \"\", \"\", \"major\"]\n * Note.tokenize(\"##\") // => [\"\", \"##\", \"\", \"\"]\n * Note.tokenize() // => [\"\", \"\", \"\", \"\"]\n */\nfunction tokenize(str) {\n  if (typeof str !== \"string\") { str = \"\"; }\n  var m = REGEX.exec(str);\n  if (!m) { return null; }\n  return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\n}\n\nvar NO_NOTE = Object.freeze({\n  pc: null,\n  name: null,\n  step: null,\n  alt: null,\n  oct: null,\n  octStr: null,\n  chroma: null,\n  midi: null,\n  freq: null\n});\n\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\nvar properties = function (str) {\n  var tokens = tokenize(str);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") { return NO_NOTE; }\n  var letter = tokens[0];\n  var acc = tokens[1];\n  var octStr = tokens[2];\n  var p = { letter: letter, acc: acc, octStr: octStr };\n  p.pc = p.letter + p.acc;\n  p.name = p.pc + octStr;\n  p.step = (p.letter.charCodeAt(0) + 3) % 7;\n  p.alt = p.acc[0] === \"b\" ? -p.acc.length : p.acc.length;\n  p.oct = octStr.length ? +octStr : null;\n  p.chroma = (SEMI[p.step] + p.alt + 120) % 12;\n  p.midi = p.oct !== null ? SEMI[p.step] + p.alt + 12 * (p.oct + 1) : null;\n  p.freq = midiToFreq(p.midi);\n  return Object.freeze(p);\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\n/**\n * Get note properties. It returns an object with the following information:\n *\n * - name {String}: the note name. The letter is always in uppercase\n * - letter {String}: the note letter, always in uppercase\n * - acc {String}: the note accidentals\n * - octave {Number}: the octave or null if not present\n * - pc {String}: the pitch class (letter + accidentals)\n * - step {Number}: number equivalent of the note letter. 0 means C ... 6 means B.\n * - alt {Number}: number equivalent of accidentals (negative are flats, positive sharps)\n * - chroma {Number}: number equivalent of the pitch class, where 0 is C, 1 is C# or Db, 2 is D...\n * - midi {Number}: the note midi number\n * - freq {Number}: the frequency using an equal temperament at 440Hz\n *\n * This function *always* returns an object with all this properties, but if it\"s\n * not a valid note all properties will be null.\n *\n * The returned object can\"t be mutated.\n *\n * @param {String} note - the note name in scientific notation\n * @return {Object} an object with the properties (or an object will all properties\n * set to null if not valid note)\n * @example\n * Note.props(\"fx-3\").name // => \"F##-3\"\n * Note.props(\"invalid\").name // => null\n * Note.props(\"C#3\").oct // => 3\n * Note.props().oct // => null\n */\nvar props = memo(properties);\n\n/**\n * Given a note name, return the note name or null if not valid note.\n * The note name will ALWAYS have the letter in upercase and accidentals\n * using # or b\n *\n * Can be used to test if a string is a valid note name.\n *\n * @function\n * @param {Pitch|string}\n * @return {string}\n *\n * @example\n * Note.name(\"cb2\") // => \"Cb2\"\n * [\"c\", \"db3\", \"2\", \"g+\", \"gx4\"].map(Note.name) // => [\"C\", \"Db3\", null, null, \"G##4\"]\n */\nvar name = function (str) { return props(str).name; };\n\n/**\n * Get pitch class of a note. The note can be a string or a pitch array.\n *\n * @function\n * @param {string|Pitch}\n * @return {string} the pitch class\n * @example\n * Note.pc(\"Db3\") // => \"Db\"\n * [\"db3\", \"bb6\", \"fx2\"].map(Note.pc) // => [ \"Db\", \"Bb\", \"F##\"]\n */\nvar pc = function (str) { return props(str).pc; };\n\n/**\n * Get the note midi number\n * (an alias of tonal-midi `toMidi` function)\n *\n * @function\n * @param {string|Number} note - the note to get the midi number from\n * @return {Integer} the midi number or null if not valid pitch\n * @example\n * Note.midi(\"C4\") // => 60\n * Note.midi(60) // => 60\n * @see midi.toMidi\n */\nvar midi = function (note) { return props(note).midi || +note || null; };\n\n/**\n * Get the frequency from midi number\n *\n * @param {Number} midi - the note midi number\n * @param {Number} tuning - (Optional) 440 by default\n * @return {Number} the frequency or null if not valid note midi\n */\nvar midiToFreq = function (midi, tuning) {\n    if ( tuning === void 0 ) tuning = 440;\n\n    return typeof midi === \"number\" ? Math.pow(2, (midi - 69) / 12) * tuning : null;\n};\n\n/**\n * Get the frequency of a note\n *\n * @function\n * @param {string|Number} note - the note name or midi note number\n * @return {Number} the frequency\n * @example\n * Note.freq(\"A4\") // => 440\n * Note.freq(69) // => 440\n */\nvar freq = function (note) { return props(note).freq || midiToFreq(note); };\n\nvar L2 = Math.log(2);\nvar L440 = Math.log(440);\n/**\n * Get the midi number from a frequency in hertz. The midi number can\n * contain decimals (with two digits precission)\n *\n * @param {Number} frequency\n * @return {Number}\n * @example\n * Note.freqToMidi(220)); //=> 57;\n * Note.freqToMidi(261.62)); //=> 60;\n * Note.freqToMidi(261)); //=> 59.96;\n */\nvar freqToMidi = function (freq) {\n  var v = 12 * (Math.log(freq) - L440) / L2 + 69;\n  return Math.round(v * 100) / 100;\n};\n\n/**\n * Return the chroma of a note. The chroma is the numeric equivalent to the\n * pitch class, where 0 is C, 1 is C# or Db, 2 is D... 11 is B\n *\n * @param {string} note - the note name\n * @return {Integer} the chroma number\n * @example\n * Note.chroma(\"Cb\") // => 11\n * [\"C\", \"D\", \"E\", \"F\"].map(Note.chroma) // => [0, 2, 4, 5]\n */\nvar chroma = function (str) { return props(str).chroma; };\n\n/**\n * Get the octave of the given pitch\n *\n * @function\n * @param {string} note - the note\n * @return {Integer} the octave or null if doesn\"t have an octave or not a valid note\n * @example\n * Note.oct(\"C#4\") // => 4\n * Note.oct(\"C\") // => null\n * Note.oct(\"blah\") // => undefined\n */\nvar oct = function (str) { return props(str).oct; };\n\nvar LETTERS = \"CDEFGAB\";\n/**\n * Given a step number return it\"s letter (0 = C, 1 = D, 2 = E)\n * @param {number} step\n * @return {string} the letter\n * @example\n * Note.stepToLetter(3) // => \"F\"\n */\nvar stepToLetter = function (step) { return LETTERS[step]; };\n\nvar fillStr = function (s, n) { return Array(n + 1).join(s); };\nvar numToStr = function (num, op) { return (typeof num !== \"number\" ? \"\" : op(num)); };\n\n/**\n * Given an alteration number, return the accidentals\n * @param {Number} alt\n * @return {String}\n * @example\n * Note.altToAcc(-3) // => \"bbb\"\n */\nvar altToAcc = function (alt) { return numToStr(alt, function (alt) { return (alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt)); }); };\n\n/**\n * Creates a note name in scientific notation from note properties,\n * and optionally another note name.\n * It receives an object with:\n * - step: the note step (0 = C, 1 = D, ... 6 = B)\n * - alt: (optional) the alteration. Negative numbers are flats, positive sharps\n * - oct: (optional) the octave\n *\n * Optionally it receives another note as a \"base\", meaning that any prop not explicitly\n * received on the first parameter will be taken from that base note. That way it can be used\n * as an immutable \"set\" operator for a that base note\n *\n * @function\n * @param {Object} props - the note properties\n * @param {String} [baseNote] - note to build the result from. If given, it returns\n * the result of applying the given props to this note.\n * @return {String} the note name in scientific notation or null if not valid properties\n * @example\n * Note.from({ step: 5 }) // => \"A\"\n * Note.from({ step: 1, acc: -1 }) // => \"Db\"\n * Note.from({ step: 2, acc: 2, oct: 2 }) // => \"E##2\"\n * Note.from({ step: 7 }) // => null\n * Note.from({alt: 1, oct: 3}, \"C4\") // => \"C#3\"\n */\nvar from = function (fromProps, baseNote) {\n  if ( fromProps === void 0 ) fromProps = {};\n  if ( baseNote === void 0 ) baseNote = null;\n\n  var ref = baseNote\n    ? Object.assign({}, props(baseNote), fromProps)\n    : fromProps;\n  var step = ref.step;\n  var alt = ref.alt;\n  var oct = ref.oct;\n  var letter = stepToLetter(step);\n  if (!letter) { return null; }\n  var pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n};\n\n/**\n * Deprecated. This is kept for backwards compatibility only.\n * Use Note.from instead\n */\nvar build = from;\n\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {number} midi - the midi note number\n * @param {boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {string} the note name\n * @example\n * Note.fromMidi(61) // => \"Db4\"\n * Note.fromMidi(61, true) // => \"C#4\"\n * // it rounds to nearest note\n * Note.fromMidi(61.7) // => \"D4\"\n */\nfunction fromMidi(num, sharps) {\n  num = Math.round(num);\n  var pcs = sharps === true ? SHARPS : FLATS;\n  var pc = pcs[num % 12];\n  var o = Math.floor(num / 12) - 1;\n  return pc + o;\n}\n\n/**\n * Simplify the note: find an enhramonic note with less accidentals.\n *\n * @param {String} note - the note to be simplified\n * @param {boolean} useSameAccType - (optional, true by default) set to true\n * to ensure the returned note has the same accidental types that the given note\n * @return {String} the simplfiied note or null if not valid note\n * @example\n * Note.simplify(\"C##\") // => \"D\"\n * Note.simplify(\"C###\") // => \"D#\"\n * Note.simplify(\"C###\", false) // => \"Eb\"\n * Note.simplify(\"B#4\") // => \"C5\"\n */\nvar simplify = function (note, sameAcc) {\n  var ref = props(note);\n  var alt = ref.alt;\n  var chroma = ref.chroma;\n  var midi = ref.midi;\n  if (chroma === null) { return null; }\n  var useSharps = sameAcc === false ? alt < 0 : alt > 0;\n  return midi === null\n    ? pc(fromMidi(chroma, useSharps))\n    : fromMidi(midi, useSharps);\n};\n\n/**\n * Get the simplified and enhramonic note of the given one.\n *\n * @param {String} note\n * @return {String} the enhramonic note\n * @example\n * Note.enharmonic(\"Db\") // => \"C#\"\n * Note.enhramonic(\"C\") // => \"C\"\n */\nvar enharmonic = function (note) { return simplify(note, false); };\n\n\n//# sourceURL=webpack:///./node_modules/tonal-note/build/es6.js?");

/***/ }),

/***/ "./node_modules/tonal-pcset/build/es6.js":
/*!***********************************************!*\
  !*** ./node_modules/tonal-pcset/build/es6.js ***!
  \***********************************************/
/*! exports provided: chroma, chromas, modes, isChroma, intervals, isEqual, isSubsetOf, isSupersetOf, includes, filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chroma\", function() { return chroma; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chromas\", function() { return chromas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modes\", function() { return modes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isChroma\", function() { return isChroma; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intervals\", function() { return intervals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return isEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSubsetOf\", function() { return isSubsetOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSupersetOf\", function() { return isSupersetOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"includes\", function() { return includes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony import */ var tonal_note__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tonal-note */ \"./node_modules/tonal-note/build/es6.js\");\n/* harmony import */ var tonal_interval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tonal-interval */ \"./node_modules/tonal-interval/build/es6.js\");\n/* harmony import */ var tonal_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tonal-array */ \"./node_modules/tonal-array/build/es6.js\");\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-pcset.svg?style=flat-square)](https://www.npmjs.com/package/tonal-pcset)\n * [![tonal](https://img.shields.io/badge/tonal-pcset-yellow.svg?style=flat-square)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-pcset` is a collection of functions to work with pitch class sets, oriented\n * to make comparations (isEqual, isSubset, isSuperset)\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * You can install via npm: `npm i --save tonal-pcset`\n *\n * ```js\n * // es6\n * import PcSet from \"tonal-pcset\"\n * var PcSet = require(\"tonal-pcset\")\n *\n * PcSet.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n * ```\n *\n * ## API documentation\n *\n * @module PcSet\n */\n\n\n\n\nvar chr = function (str) { return Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"chroma\"])(str) || Object(tonal_interval__WEBPACK_IMPORTED_MODULE_1__[\"chroma\"])(str) || 0; };\nvar pcsetNum = function (set) { return parseInt(chroma(set), 2); };\nvar clen = function (chroma) { return chroma.replace(/0/g, \"\").length; };\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array|String} set - the pitch class set\n * @return {String} a binary representation of the pitch class set\n * @example\n * PcSet.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nfunction chroma(set) {\n  if (isChroma(set)) { return set; }\n  if (!Array.isArray(set)) { return \"\"; }\n  var b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  set.map(chr).forEach(function (i) {\n    b[i] = 1;\n  });\n  return b.join(\"\");\n}\n\nvar all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @return {Array} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nfunction chromas(n) {\n  all = all || Object(tonal_array__WEBPACK_IMPORTED_MODULE_2__[\"range\"])(2048, 4095).map(function (n) { return n.toString(2); });\n  return typeof n === \"number\"\n    ? all.filter(function (chroma) { return clen(chroma) === n; })\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|String} set - the list of notes or pitchChr of the set\n * @param {Boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<String>} an array with all the modes of the chroma\n *\n * @example\n * PcSet.modes([\"C\", \"D\", \"E\"]).map(PcSet.intervals)\n */\nfunction modes(set, normalize) {\n  normalize = normalize !== false;\n  var binary = chroma(set).split(\"\");\n  return Object(tonal_array__WEBPACK_IMPORTED_MODULE_2__[\"compact\"])(\n    binary.map(function(_, i) {\n      var r = Object(tonal_array__WEBPACK_IMPORTED_MODULE_2__[\"rotate\"])(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nvar REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {String} chroma - the pitch class set chroma\n * @return {Boolean} true if its a valid pcset chroma\n * @example\n * PcSet.isChroma(\"101010101010\") // => true\n * PcSet.isChroma(\"101001\") // => false\n */\nfunction isChroma(set) {\n  return REGEX.test(set);\n}\n\nvar IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {String|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * PcSet.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nfunction intervals(set) {\n  if (!isChroma(set)) { return []; }\n  return Object(tonal_array__WEBPACK_IMPORTED_MODULE_2__[\"compact\"])(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|String} set1 - one of the pitch class sets\n * @param {Array|String} set2 - the other pitch class set\n * @return {Boolean} true if they are equal\n * @example\n * PcSet.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nfunction isEqual(s1, s2) {\n  if (arguments.length === 1) { return function (s) { return isEqual(s1, s); }; }\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = PcSet.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nfunction isSubsetOf(set, notes) {\n  if (arguments.length > 1) { return isSubsetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = PcSet.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nfunction isSupersetOf(set, notes) {\n  if (arguments.length > 1) { return isSupersetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n * @param {Array|String} set - the base set to test against\n * @param {String|Pitch} note - the note to test\n * @return {Boolean} true if the note is included in the pcset\n * @example\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nfunction includes(set, note) {\n  if (arguments.length > 1) { return includes(set)(note); }\n  set = chroma(set);\n  return function(note) {\n    return set[chr(note)] === \"1\";\n  };\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|String} set - the pitch class set notes\n * @param {Array|String} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * PcSet.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * PcSet.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nfunction filter(set, notes) {\n  if (arguments.length === 1) { return function (n) { return filter(set, n); }; }\n  return notes.filter(includes(set));\n}\n\n\n//# sourceURL=webpack:///./node_modules/tonal-pcset/build/es6.js?");

/***/ }),

/***/ "./node_modules/tonal-scale/build/es6.js":
/*!***********************************************!*\
  !*** ./node_modules/tonal-scale/build/es6.js ***!
  \***********************************************/
/*! exports provided: props, names, intervals, notes, exists, tokenize, modeNames, chords, toScale, supersets, subsets */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"props\", function() { return props; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"names\", function() { return names; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intervals\", function() { return intervals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notes\", function() { return notes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exists\", function() { return exists; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenize\", function() { return tokenize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modeNames\", function() { return modeNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chords\", function() { return chords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toScale\", function() { return toScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supersets\", function() { return supersets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subsets\", function() { return subsets; });\n/* harmony import */ var tonal_note__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tonal-note */ \"./node_modules/tonal-note/build/es6.js\");\n/* harmony import */ var tonal_pcset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tonal-pcset */ \"./node_modules/tonal-pcset/build/es6.js\");\n/* harmony import */ var tonal_distance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tonal-distance */ \"./node_modules/tonal-distance/build/es6.js\");\n/* harmony import */ var tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tonal-dictionary */ \"./node_modules/tonal-dictionary/build/es6.js\");\n/* harmony import */ var tonal_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tonal-array */ \"./node_modules/tonal-array/build/es6.js\");\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-scale.svg?style=flat-square)](https://www.npmjs.com/package/tonal-scale)\n *\n * A scale is a collection of pitches in ascending or descending order.\n *\n * This module provides functions to get and manipulate scales.\n *\n * @example\n * // es6\n * import * as Scale from \"tonal-scale\"\n * // es5\n * const Scale = require(\"tonal-scale\");\n *\n * @example\n * Scale.notes(\"Ab bebop\") // => [ \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"G\" ]\n * Scale.names() => [\"major\", \"minor\", ...]\n * @module Scale\n */\n\n\n\n\n\n\nvar NO_SCALE = Object.freeze({\n  name: null,\n  intervals: [],\n  names: [],\n  chroma: null,\n  setnum: null\n});\n\nvar properties = function (name) {\n  var intervals = Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"])(name);\n  if (!intervals) { return NO_SCALE; }\n  var s = { intervals: intervals, name: name };\n  s.chroma = Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_1__[\"chroma\"])(intervals);\n  s.setnum = parseInt(s.chroma, 2);\n  s.names = tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"].names(s.chroma);\n  return Object.freeze(s);\n};\n\nvar memoize = function (fn, cache) { return function (str) { return cache[str] || (cache[str] = fn(str)); }; };\n\n/**\n * Get scale properties. It returns an object with:\n * - name: the scale name\n * - names: a list with all possible names (includes the current)\n * - intervals: an array with the scale intervals\n * - chroma:  scale croma (see pcset)\n * - setnum: scale chroma number\n *\n * @function\n * @param {String} name - the scale name (without tonic)\n * @return {Object}\n */\nvar props = memoize(properties, {});\n\n/**\n * Return the available scale names\n *\n * @function\n * @param {boolean} aliases - true to include aliases\n * @return {Array} the scale names\n *\n * @example\n * Scale.names() // => [\"maj7\", ...]\n */\nvar names = tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"].names;\n\n/**\n * Given a scale name, return its intervals. The name can be the type and\n * optionally the tonic (which is ignored)\n *\n * It retruns an empty array when no scale found\n *\n * @function\n * @param {String} name - the scale name (tonic and type, tonic is optional)\n * @return {Array<String>} the scale intervals if is a known scale or an empty\n * array if no scale found\n * @example\n * Scale.intervals(\"major\") // => [ \"1P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\" ]\n */\nvar intervals = function (name) {\n  var p = tokenize(name);\n  return props(p[1]).intervals;\n};\n\n/**\n * Get the notes (pitch classes) of a scale.\n *\n * Note that it always returns an array, and the values are only pitch classes.\n *\n * @function\n * @param {String} tonic\n * @param {String} nameOrTonic - the scale name or tonic (if 2nd param)\n * @param {String} [name] - the scale name without tonic\n * @return {Array} a pitch classes array\n *\n * @example\n * Scale.notes(\"C\", \"major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"C major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"C4\", \"major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"A4\", \"no-scale\") // => []\n * Scale.notes(\"blah\", \"major\") // => []\n */\nfunction notes(nameOrTonic, name) {\n  var p = tokenize(nameOrTonic);\n  name = name || p[1];\n  return intervals(name).map(Object(tonal_distance__WEBPACK_IMPORTED_MODULE_2__[\"transpose\"])(p[0]));\n}\n\n/**\n * Check if the given name is a known scale from the scales dictionary\n *\n * @function\n * @param {String} name - the scale name\n * @return {Boolean}\n */\nfunction exists(name) {\n  var p = tokenize(name);\n  return Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"])(p[1]) !== undefined;\n}\n\n/**\n * Given a string with a scale name and (optionally) a tonic, split\n * that components.\n *\n * It retuns an array with the form [ name, tonic ] where tonic can be a\n * note name or null and name can be any arbitrary string\n * (this function doesn\"t check if that scale name exists)\n *\n * @function\n * @param {String} name - the scale name\n * @return {Array} an array [tonic, name]\n * @example\n * Scale.tokenize(\"C mixolydean\") // => [\"C\", \"mixolydean\"]\n * Scale.tokenize(\"anything is valid\") // => [\"\", \"anything is valid\"]\n * Scale.tokenize() // => [\"\", \"\"]\n */\nfunction tokenize(str) {\n  if (typeof str !== \"string\") { return [\"\", \"\"]; }\n  var i = str.indexOf(\" \");\n  var tonic = Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"name\"])(str.substring(0, i)) || Object(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"name\"])(str) || \"\";\n  var name = tonic !== \"\" ? str.substring(tonic.length + 1) : str;\n  return [tonic, name.length ? name : \"\"];\n}\n\n/**\n * Find mode names of a scale\n *\n * @function\n * @param {String} name - scale name\n */\nvar modeNames = function (name) {\n  var ivls = intervals(name);\n  var tonics = notes(name);\n\n  return Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_1__[\"modes\"])(ivls)\n    .map(function (chroma, i) {\n      var name = tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"].names(chroma)[0];\n      if (name) { return [tonics[i] || ivls[i], name]; }\n    })\n    .filter(function (x) { return x; });\n};\n\n/**\n * Get all chords that fits a given scale\n *\n * @function\n * @param {String} name\n */\nvar chords = function (name) {\n  var inScale = Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_1__[\"isSubsetOf\"])(intervals(name));\n  return tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"chord\"].names().filter(function (name) { return inScale(Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"chord\"])(name)); });\n};\n\n/**\n * Given an array of notes, return the scale: a pitch class set starting from\n * the first note of the array\n *\n * @function\n * @param {Array} notes\n * @return {Array}\n */\nvar toScale = function (notes) {\n  var pcset = Object(tonal_array__WEBPACK_IMPORTED_MODULE_4__[\"compact\"])(notes.map(tonal_note__WEBPACK_IMPORTED_MODULE_0__[\"pc\"]));\n  if (!pcset.length) { return pcset; }\n  var tonic = pcset[0];\n  var scale = Object(tonal_array__WEBPACK_IMPORTED_MODULE_4__[\"unique\"])(pcset);\n  return Object(tonal_array__WEBPACK_IMPORTED_MODULE_4__[\"rotate\"])(scale.indexOf(tonic), scale);\n};\n\n/**\n * Get all scales names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of scale names\n */\nvar supersets = function (name) {\n  if (!intervals(name).length) { return []; }\n  var isSuperset = Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_1__[\"isSupersetOf\"])(intervals(name));\n  return tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"].names().filter(function (name) { return isSuperset(Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"])(name)); });\n};\n\n/**\n * Find all scales names that are a subset of the given one\n * (has less notes but all from the given scale)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of scale names\n */\nvar subsets = function (name) {\n  var isSubset = Object(tonal_pcset__WEBPACK_IMPORTED_MODULE_1__[\"isSubsetOf\"])(intervals(name));\n  return tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"].names().filter(function (name) { return isSubset(Object(tonal_dictionary__WEBPACK_IMPORTED_MODULE_3__[\"scale\"])(name)); });\n};\n\n\n//# sourceURL=webpack:///./node_modules/tonal-scale/build/es6.js?");

/***/ }),

/***/ "./node_modules/tonal/index.js":
/*!*************************************!*\
  !*** ./node_modules/tonal/index.js ***!
  \*************************************/
/*! exports provided: Array, Note, Interval, Distance, Scale, Chord, PcSet, Dictionary, transpose, interval, note, midi, freq, chord, scale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transpose\", function() { return transpose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interval\", function() { return interval; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"note\", function() { return note; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"midi\", function() { return midi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"freq\", function() { return freq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chord\", function() { return chord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony import */ var tonal_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tonal-array */ \"./node_modules/tonal-array/build/es6.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Array\", function() { return tonal_array__WEBPACK_IMPORTED_MODULE_0__; });\n/* harmony import */ var tonal_note__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tonal-note */ \"./node_modules/tonal-note/build/es6.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Note\", function() { return tonal_note__WEBPACK_IMPORTED_MODULE_1__; });\n/* harmony import */ var tonal_interval__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tonal-interval */ \"./node_modules/tonal-interval/build/es6.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Interval\", function() { return tonal_interval__WEBPACK_IMPORTED_MODULE_2__; });\n/* harmony import */ var tonal_distance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tonal-distance */ \"./node_modules/tonal-distance/build/es6.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Distance\", function() { return tonal_distance__WEBPACK_IMPORTED_MODULE_3__; });\n/* harmony import */ var tonal_dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tonal-dictionary */ \"./node_modules/tonal-dictionary/build/es6.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Dictionary\", function() { return tonal_dictionary__WEBPACK_IMPORTED_MODULE_4__; });\n/* harmony import */ var tonal_scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tonal-scale */ \"./node_modules/tonal-scale/build/es6.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Scale\", function() { return tonal_scale__WEBPACK_IMPORTED_MODULE_5__; });\n/* harmony import */ var tonal_chord__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tonal-chord */ \"./node_modules/tonal-chord/build/es6.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Chord\", function() { return tonal_chord__WEBPACK_IMPORTED_MODULE_6__; });\n/* harmony import */ var tonal_pcset__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tonal-pcset */ \"./node_modules/tonal-pcset/build/es6.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"PcSet\", function() { return tonal_pcset__WEBPACK_IMPORTED_MODULE_7__; });\n/**\n * [![npm version](https://img.shields.io/npm/v/tonal-key.svg?style=flat-square)](https://www.npmjs.com/package/tonal-key)\n *\n * The `Tonal` module is a facade to the rest of the modules. They are namespaced,\n * so for example to use `pc` function from `tonal-note` you have to write:\n * `Tonal.Note.pc`\n *\n * It exports the following modules:\n * - Note\n * - Interval\n * - Distance\n * - Scale\n * - Chord\n * - PcSet\n *\n * Additionally this facade exports some functions without namespace (see \"Methods\" below)\n *\n * @example\n * // es6 modules\n * import * as Tonal from \"tonal\"\n * Tonal.Note.name(\"cx\") // => \"C##\"\n *\n * @example\n * import { Note } from \"tonal\"\n * Note.name(\"bb\") // => \"Bb\"\n *\n * @example\n * // es5 node modules\n * var Tonal = require(\"tonal\");\n * Tonal.Distance.transpose(Tonal.Note.pc(\"C#2\"), \"M3\") // => \"E#\"\n * Tonal.Chord.notes(\"Dmaj7\") // => [\"D\", \"F#\", \"A\", \"C#\"]\n *\n * @module Tonal\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Transpose a note by an interval\n * @function\n * @param {String} note\n * @param {String} interval\n * @return {String} the transported note\n * @see Distance.transpose\n */\nconst transpose = tonal_distance__WEBPACK_IMPORTED_MODULE_3__[\"transpose\"];\n\n/**\n * Get the interval from two notes\n * @function\n * @param {String} from\n * @param {String} to\n * @return {String} the interval in reverse shorthand notation\n * @see Distance.interval\n */\nconst interval = tonal_distance__WEBPACK_IMPORTED_MODULE_3__[\"interval\"];\n\n/**\n * Get note properties\n * @function\n * @param {String} note - the note name\n * @return {Object}\n * @see Note.props\n * @example\n * Tonal.note(\"A4\").chroma // => 9\n */\nconst note = tonal_note__WEBPACK_IMPORTED_MODULE_1__[\"props\"];\n\n/**\n * Get midi note number\n * @function\n * @param {String} note\n * @return {Number}\n * @see Note.midi\n * @example\n * Tonal.midi(\"A4\") // => 49\n */\nconst midi = tonal_note__WEBPACK_IMPORTED_MODULE_1__[\"midi\"];\n\n/**\n * Get note frequency using equal tempered tuning at 440\n * @function\n * @param {String} note\n * @return {Number}\n * @see Note.freq\n * @example\n * Tonal.freq(\"A4\") // => 440\n */\nconst freq = tonal_note__WEBPACK_IMPORTED_MODULE_1__[\"freq\"];\n\n/**\n * Get intervals from a chord type\n * @function\n * @param {String} type - the chord type (no tonic)\n * @return {Array} an array of intervals or undefined if the chord type is not known\n * @see Dictionary.chord\n * @example\n * Tonal.chord(\"m7b5\") // => [\"1P\", \"3m\", \"5d\", \"7m\"]\n */\nconst chord = tonal_dictionary__WEBPACK_IMPORTED_MODULE_4__[\"chord\"];\n\n/**\n * Get intervals from scale name\n * @function\n * @param {String} name - the scale name (without tonic)\n * @return {Array} an array of intervals or undefiend if the scale is not kown\n * @example\n * Tonal.scale(\"major\") // => [\"1P\", \"2M\", \"3M\"...]\n */\nconst scale = tonal_dictionary__WEBPACK_IMPORTED_MODULE_4__[\"scale\"];\n\n\n//# sourceURL=webpack:///./node_modules/tonal/index.js?");

/***/ }),

/***/ "./src/MIDI/Note.js":
/*!**************************!*\
  !*** ./src/MIDI/Note.js ***!
  \**************************/
/*! exports provided: AwaitingDrum, Note, NoteSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AwaitingDrum\", function() { return AwaitingDrum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Note\", function() { return Note; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoteSet\", function() { return NoteSet; });\n/* harmony import */ var tonal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tonal */ \"./node_modules/tonal/index.js\");\n\n\n// special pitch value meaning the note will be set later by a DrumBeatGroup\nlet AwaitingDrum = Symbol('AwaitingDrum');\n\n\nclass Note {\n  /**\n   * @param {Object} opts Options object.\n   * @param {number} opts.time The note's time, in beats.\n   * @param {string} opts.pitch A string representing the pitch and octave of the note. e.x. 'A4'\n   * @param {number} opts.duraion The note's duration, in beats.\n   * @param {number} opts.volume The note's volume, as a float 0-1 (inclusive).\n   */\n  constructor(opts) {\n    /**\n     * The note's time, in beats.\n     * @type {number}\n     */\n    this.time = opts.time;\n    /**\n     * A string representing the pitch and octave of the note.\n     * @type {string}\n     * @example 'A4'\n     */\n    this.pitch = opts.pitch;\n    /**\n     * The note's duration, in beats.\n     * @type {number}\n     */\n    this.duration = opts.duration;\n    /**\n     * The note's volume, as a float 0-1 (inclusive).\n     * @type {number}\n     */\n    this.volume = opts.volume;\n  }\n  /**\n   * An integer representing the MIDI pitch value of the note.\n   * @type {number}\n   */\n  get midi() {\n    if(this.pitch === AwaitingDrum) {\n      return null;\n    } else {\n      return tonal__WEBPACK_IMPORTED_MODULE_0__[\"Note\"].midi(this.pitch);\n    }\n  }\n  /**\n   * An integer 0-127 that roughly correlates to volume\n   * @type {number}\n   */\n  get velocity() {\n    return Math.floor(this.volume * 127);\n  }\n}\n\nclass NoteSet extends Array {\n  constructor() {\n    super();\n    this.push(...arguments);\n  }\n}\n\n\n//# sourceURL=webpack:///./src/MIDI/Note.js?");

/***/ }),

/***/ "./src/PlaybackStyle/PlaybackStyle.js":
/*!********************************************!*\
  !*** ./src/PlaybackStyle/PlaybackStyle.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PlaybackStyle; });\n/* harmony import */ var _loader_loader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loader/loader.js */ \"./src/loader/loader.js\");\n/* harmony import */ var _parser_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/parser.js */ \"./src/parser/parser.js\");\n\n\n\nclass PlaybackStyle {\n  /**\n   * Set the main ast (the one that plays all its instruments by default).\n   * @param {ast.GlobalScope} main the main ast\n   * @param {Map.<string: ast.GlobalScope>} asts A map of asts by their path\n   */\n  constructor(mainPath) {\n    this._mainPath = mainPath;\n    this._ASTs = new Map();\n    this._initialized = false;\n  }\n  /**\n   * Parse each file, pull its dependencies, put it all in a cache, rinse and\n   * repeat.\n   * @private\n   */\n  async _loadDependencies() {\n    let pendingDependencies = [this._mainPath];\n    let dependencyPath;\n    // @TODO: verify that dependencies have compatible time signature to main\n    while(dependencyPath = pendingDependencies.pop()) {\n      let rawfile;\n      try {\n        rawfile = await _loader_loader_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].load(dependencyPath);\n      } catch(e) {\n        throw new Error(`Couldn't locate imported style \"${dependencyPath}\".`);\n      }\n      let ast = await _parser_parser_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parse(rawfile);\n      this._ASTs.set(dependencyPath, ast);\n      ast.init();\n      for(let newDependency of ast.dependencies) {\n        if(!this._ASTs.has(newDependency)) {\n          pendingDependencies.push(newDependency);\n        }\n      }\n    }\n    this._main = this._ASTs.get(this._mainPath);\n  }\n  _link() {\n    this._main.link(this._ASTs);\n  }\n  /**\n   * Initialize the style, which includes loading dependencies and linking\n   * track/pattern calls. Must be called before compiling/playing.\n   */\n  async init() {\n    await this._loadDependencies();\n    this._link();\n    this._initialized = true;\n  }\n  /**\n   * Compile a song into a set of MIDI-like note instructions.\n   * @param {Song} song A Playback Song (notochord????)\n   * @returns {NoteSet.<Note>} An array-like object containing MIDI-like note\n   * instructions.\n   */\n  compile(song) {\n    if(!this._initialized) {\n      throw new Error('PlayBack style must be initialized before compiling');\n    }\n    let songIterator = song[Symbol.iterator]();\n    let nextValue = songIterator.next();\n    console.log('nextValue', nextValue)\n    let notes = this._main.execute(songIterator);\n    console.log('---final result---');\n    console.log(notes);\n    \n    /*\n    while(nextValue = songIterator.next(), !nextValue.done) {\n      this._main.execute(songIterator);\n    }\n    */\n  }\n  async play(song) {\n    this.compile(song);\n    // @TODO: take the MIDI events and play them\n  }\n}\n\n\n//# sourceURL=webpack:///./src/PlaybackStyle/PlaybackStyle.js?");

/***/ }),

/***/ "./src/ast/ArgumentOperators.js":
/*!**************************************!*\
  !*** ./src/ast/ArgumentOperators.js ***!
  \**************************************/
/*! exports provided: AnchorArgument, BooleanNot, BooleanAnd, BooleanOr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnchorArgument\", function() { return AnchorArgument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BooleanNot\", function() { return BooleanNot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BooleanAnd\", function() { return BooleanAnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BooleanOr\", function() { return BooleanOr; });\n/* harmony import */ var _type_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type_utils.js */ \"./src/ast/type_utils.js\");\n\n\nclass AnchorArgument {\n  constructor(anchor) {\n    this.anchor = anchor;\n  }\n}\n\nclass BooleanOperator {\n  constructor() {\n    this.args = Array.prototype.slice.call(arguments);\n  }\n  link(ASTs, parentStyle, parentTrack) {\n    this.args.forEach(arg => {\n      if(arg.link) arg.link(ASTs, parentStyle, parentTrack);\n    });\n  }\n  init(scope) {\n    this.scope = scope\n    this.args.forEach(arg => {\n      if(arg.init) arg.init(scope);\n    });\n  }\n  resolve_args(songIterator) {\n    return this.args.map(arg => {\n      if(arg.init) {\n        return arg.init(songIterator);\n      } else {\n        return arg;\n      }\n    });\n  }\n}\n\nclass BooleanNot extends BooleanOperator {\n  constructor() {\n    super(arguments);\n  }\n  execute(songIterator) {\n    let args = this.resolve_args(songIterator);\n    return !Object(_type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"cast_bool\"])(args[0]);\n  }\n}\nclass BooleanAnd extends BooleanOperator {\n  constructor() {\n    super(arguments);\n  }\n  execute(songIterator) {\n    // sorry no short-circuiting because this code is prettier\n    // @TODO: add short-circuiting if this actually makes it too slow\n    let args = this.resolve_args(songIterator);\n    return Object(_type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"cast_bool\"])(args[0]) && Object(_type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"cast_bool\"])(args[1]);\n  }\n}\nclass BooleanOr extends BooleanOperator {\n  constructor() {\n    super(arguments);\n  }\n  execute(songIterator) {\n    let args = this.resolve_args(songIterator);\n    return Object(_type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"cast_bool\"])(args[0]) || Object(_type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"cast_bool\"])(args[1]);\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/ArgumentOperators.js?");

/***/ }),

/***/ "./src/ast/BeatGroups.js":
/*!*******************************!*\
  !*** ./src/ast/BeatGroups.js ***!
  \*******************************/
/*! exports provided: BeatGroupLiteral, Measure, DrumBeatGroupLiteral */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BeatGroupLiteral\", function() { return BeatGroupLiteral; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Measure\", function() { return Measure; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DrumBeatGroupLiteral\", function() { return DrumBeatGroupLiteral; });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"./src/ast/errors.js\");\n/* harmony import */ var _type_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type_utils.js */ \"./src/ast/type_utils.js\");\n/* harmony import */ var _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../MIDI/Note.js */ \"./src/MIDI/Note.js\");\n/* harmony import */ var _FunctionCall_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FunctionCall.js */ \"./src/ast/FunctionCall.js\");\n\n\n\n\n\nclass BeatGroupLiteral {\n  constructor(measures) {\n    this.measures = measures;\n    this.scope = null;\n  }\n  init(scope) {\n    this.scope = scope;\n    this.measures.forEach(measure => measure.init(scope));\n  }\n  link() {return;}\n  execute(songIterator) {\n    let joinedMeasures = new _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"NoteSet\"]();\n    for(let i = 0; i < this.measures.length; i++) {\n      let offset = i * 4; // @TODO: pull in actual meter somehow\n      let measureNotes = this.measures[i].execute(songIterator);\n      if(measureNotes === _type_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"Nil\"]) return _type_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"Nil\"]; // lets a/s abort the beatgroup\n      for(let measureNote of measureNotes) {\n        measureNote.time += offset;\n        joinedMeasures.push(measureNote);\n      }\n    }\n    return joinedMeasures;\n  }\n}\n\nclass Measure {\n  constructor(beats) {\n    this.beats = beats;\n    this.beatsPerMeasure = null;\n    this.scope = null;\n  }\n  calculateDurationAfter(beatIndex) {\n    let currentBeat = this.beats[beatIndex];\n    let currentBeatTime = currentBeat.getTime();\n    \n    let nextBeatTime;\n    if(beatIndex + 1 >= this.beats.length) {\n      nextBeatTime = this.beatsPerMeasure + 1;\n    } else {\n      let nextBeat = this.beats[beatIndex + 1];\n      nextBeatTime = nextBeat.getTime();\n    }\n    return nextBeatTime - currentBeatTime;\n  }\n  init(scope) {\n    this.scope = scope;\n    this.beatsPerMeasure = this.scope.vars.get('time-signature')[0];\n    // @TODO does this need more math?\n    this.beats.forEach((beat, i) => {\n      beat.init(scope, this, i);\n    });\n  }\n  execute(songIterator) {\n    // each beat returns a NoteSet since it could be a chord or whatever\n    let joined = new _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"NoteSet\"]();\n    for(let beat of this.beats) {\n      let notes = beat.execute(songIterator);\n      if(notes === _type_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"Nil\"]) return _type_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"Nil\"]; // lets a and s abort the beatgroup.\n      joined.push(...notes);\n    }\n    return joined;\n  }\n}\n\nclass DrumBeatGroupLiteral {\n  constructor(drum, beatGroup) {\n    this.drum = drum;\n    this.beatGroup = beatGroup; // for now there's no diff in functionality...\n    // @TODO make sure our beats are all drummy\n  }\n  init(scope) {\n    this.scope = scope;\n    if(this.beatGroup.init) this.beatGroup.init(scope);\n  }\n  link() {return;} // @TODO: I think patterncalls are allowed here?\n  execute(songIterator) {\n    let notes = this.beatGroup.execute(songIterator);\n    for(let note of notes) {\n      if(note.pitch === _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"AwaitingDrum\"]) {\n        note.pitch = this.drum; // @TODO: convert to number?\n      } else {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"MelodicBeatInDrumBeatGroupError\"](this.scope);\n      }\n    }\n    return notes;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/BeatGroups.js?");

/***/ }),

/***/ "./src/ast/BeatLiterals.js":
/*!*********************************!*\
  !*** ./src/ast/BeatLiterals.js ***!
  \*********************************/
/*! exports provided: MelodicBeatLiteral, DrumBeatLiteral */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MelodicBeatLiteral\", function() { return MelodicBeatLiteral; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DrumBeatLiteral\", function() { return DrumBeatLiteral; });\n/* harmony import */ var _type_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type_utils.js */ \"./src/ast/type_utils.js\");\n/* harmony import */ var tonal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tonal */ \"./node_modules/tonal/index.js\");\n/* harmony import */ var _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../MIDI/Note.js */ \"./src/MIDI/Note.js\");\n\n\n\n\nclass MelodicBeatLiteral {\n  constructor(opts) {\n    this.time = opts.time || {time: 'auto'};\n    this.pitch = opts.pitch;\n    this.octave = opts.octave || 'inherit';\n    this.scope = null;\n    this.parentMeasure = null;\n    this.indexInMeasure = null;\n  }\n  init(scope, parentMeasure, indexInMeasure) {\n    this.scope = scope;\n    this.parentMeasure = parentMeasure;\n    this.indexInMeasure = indexInMeasure;\n  }\n  getTime() {\n    if(this.time.time === 'auto') {\n      return this.indexInMeasure + 1;\n    } else {\n      return this.time.time;\n    }\n  }\n  /**\n   * Normalize a chord into a form tonal can handle\n   * @param {string} chord\n   * @return {string}\n   */\n  normalizeChord(chord) {\n    return chord\n      .replace(/-/g, '_') // tonal uses _ over - for minor7\n      .replace(/minor|min/g, 'm'); // tonal is surprisingly bad at identifying minor chords??\n  }\n  chordToScaleName(chord) {\n    let chordType = tonal__WEBPACK_IMPORTED_MODULE_1__[\"Chord\"].tokenize(chord)[1];\n\n    // @TODO: make this more robust\n    let names = tonal__WEBPACK_IMPORTED_MODULE_1__[\"Chord\"].props(chordType).names;\n    if(names.includes('dim')) return 'diminished';\n    if(names.includes('aug')) return 'augmented';\n    if(names.includes('Major')) return 'major';\n    if(names.includes('minor')) return 'minor';\n    if(names.includes('minor7')) return 'dorian';\n    if(names.includes('Dominant')) return 'mixolydian';\n    // if none of the above match, do our best to find the closest fit\n    let closestScale = 'major'\n    names.forEach(name => {\n      if(name.startsWith('dim')) closestScale = 'diminished';\n      if(name.startsWith('aug')) closestScale = 'augmented';\n      if(name.startsWith('M')) closestScale = 'major';\n      if(name.startsWith('m')) closestScale = 'minor';\n    });\n    return closestScale;\n  };\n  getPitches(songIterator) { // should current chord be requested from measure?\n    let anchorChord, root;\n    \n    switch(this.pitch.anchor) {\n      case 'KEY': {\n        anchorChord = songIterator.song.getKey();\n        break;\n      }\n      case 'NEXT': {\n        let nextMeasure = songIterator.getRelative(1);\n        if(nextMeasure) {\n          anchorChord = nextMeasure[0];\n        } else {\n          anchorChord = songIterator.song.getKey();\n        }\n        break;\n      }\n      case 'STEP':\n      case 'ARPEGGIATE': { // @TODO\n        anchorChord = songIterator.getRelative(0)[0];\n        break;\n      }\n      default: {\n        // crawl backward through this measure to get the last set beat\n        let lastSetBeat = Math.floor(this.getTime());\n        do {\n          anchorChord = songIterator.getRelative(0)[lastSetBeat];\n          lastSetBeat--;\n        } while(!anchorChord);\n      }\n    }\n\n    anchorChord = this.normalizeChord(anchorChord);\n\n    let anchorTonic = tonal__WEBPACK_IMPORTED_MODULE_1__[\"Chord\"].tokenize(anchorChord)[0]; // does this always work? *shrug*\n    let anchorScaleName = this.chordToScaleName(anchorChord);\n    let scalePCs = tonal__WEBPACK_IMPORTED_MODULE_1__[\"Scale\"].notes(anchorTonic, anchorScaleName);\n    let rootPC = scalePCs[this.pitch.degree - 1];\n    root = tonal__WEBPACK_IMPORTED_MODULE_1__[\"Note\"].from({oct: this.getOctave()}, rootPC);\n\n    if(this.pitch.chord) {\n      // this feels extremely incorrect\n      // why would anyone need it to work this way\n      let anchorChordType = tonal__WEBPACK_IMPORTED_MODULE_1__[\"Chord\"].tokenize(anchorChord)[1];\n      return tonal__WEBPACK_IMPORTED_MODULE_1__[\"Chord\"].notes(root, anchorChordType);\n    } else {\n      return [root];\n    }\n  }\n  getOctave() {\n    if(this.octave === 'inherit') {\n      return this.scope.vars.get('octave');\n    } else {\n      return this.octave;\n    }\n  }\n  getDuration() {\n    let duration;\n    duration = this.parentMeasure.calculateDurationAfter(this.indexInMeasure);\n    if(this.time.flag === 'STACCATO') {\n      // @TODO: how does one calculate staccatoness?\n    }\n    return duration;\n  }\n  getVolume() {\n    let volume = this.scope.vars.get('volume');\n    if(this.time.flag === 'ACCENTED') volume = Math.min(1, volume += .1);\n    return volume;\n  }\n  execute(songIterator) {\n    let notes = new _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"NoteSet\"]();\n    let time = this.getTime(); // @TODO: this varies with rolling\n    let pitches = this.getPitches(songIterator);\n    let duration = this.getDuration(); // @TODO: this varies with rolling\n    let volume = this.getVolume();\n    \n    for(let pitch of pitches) {\n      notes.push(new _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"Note\"]({\n        time: time,\n        pitch: pitch,\n        duration: duration,\n        volume: volume\n      }));\n    }\n    \n    return notes;\n  }\n}\n\nclass DrumBeatLiteral {\n  constructor(opts) {\n    this.time = opts.time;\n    this.accented = opts.accented || false;\n    this.scope = null;\n    this.parentMeasure = null;\n    this.indexInMeasure = null;\n  }\n  init(scope, parentMeasure, indexInMeasure) {\n    this.scope = scope;\n    this.parentMeasure = parentMeasure;\n    this.indexInMeasure = indexInMeasure;\n  }\n  getTime() {\n    return this.time;\n  }\n  getDuration() {\n    let duration;\n    duration = this.parentMeasure.calculateDurationAfter(this.indexInMeasure);\n    return duration;\n  }\n  getVolume() {\n    let volume = this.scope.vars.get('volume');\n    if(this.accented) volume = Math.min(1, volume += .1);\n    return volume;\n  }\n  execute(songIterator) {\n    let time = this.getTime();\n    let duration = this.getDuration();\n    let volume = this.getVolume();\n    \n    return new _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"NoteSet\"](\n      new _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"Note\"]({\n        time: time,\n        pitch: _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"AwaitingDrum\"],\n        duration: duration,\n        volume: volume\n      })\n    );\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/BeatLiterals.js?");

/***/ }),

/***/ "./src/ast/ConfigStatements.js":
/*!*************************************!*\
  !*** ./src/ast/ConfigStatements.js ***!
  \*************************************/
/*! exports provided: MetaStatement, OptionsStatement, ImportStatement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MetaStatement\", function() { return MetaStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OptionsStatement\", function() { return OptionsStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImportStatement\", function() { return ImportStatement; });\n/* harmony import */ var _Scope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Scope.js */ \"./src/ast/Scope.js\");\n\n\nclass MetaStatement extends _Scope_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(function_calls) {\n    super();\n    this.name = '@meta';\n    this.type = '@meta';\n    this.function_calls = function_calls;\n  }\n  init(scope) {\n    this.scope = scope;\n    \n    // nothing in here can be dynamic so resolve these at compile time\n    for(let function_call of this.function_calls) {\n      function_call.init(this);\n      function_call.execute();\n    }\n    \n    scope.meta = this.vars;\n  }\n}\n\nclass OptionsStatement extends _Scope_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(function_calls) {\n    super();\n    this.name = '@options';\n    this.type = '@options';\n    this.function_calls = function_calls;\n  }\n  init(scope) {\n    \n    // nothing in here /should/ be dynamic so resolve these at compile time\n    for(let function_call of this.function_calls) {\n      function_call.init(this);\n      function_call.execute();\n    }\n    \n    this.scope = scope;\n    // in this case we're actually overwriting our scope's variables, not\n    // vise-versa\n    scope.vars = new Map([...scope.vars, ...this.vars]);\n  }\n}\n\nclass ImportStatement {\n  constructor(path, identifier) {\n    this.path = path;\n    this.identifier = identifier;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/ConfigStatements.js?");

/***/ }),

/***/ "./src/ast/FunctionCall.js":
/*!*********************************!*\
  !*** ./src/ast/FunctionCall.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FunctionCall; });\n/* harmony import */ var _function_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./function_data.js */ \"./src/ast/function_data.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"./src/ast/errors.js\");\n\n\n\n/**\n * If the value is a FunctionCall, call it and return the returned value.\n * Otherwise, return the value itself.\n * @private\n */ // @TODO: if this is needed elsewhere, put it somewhere useful.\n\nclass FunctionCall {\n  /**\n   * @constructor\n   * @param {string} identifier The name of the function. Ideally it should\n   * match the name of one of the functions in function_data.js\n   */\n  constructor(identifier, args) {\n    this.identifier = identifier;\n    this.definition = _function_data_js__WEBPACK_IMPORTED_MODULE_0__[\"definitions\"].get(identifier);\n    this.args = args;\n    this.scope = null;\n  }\n  init(scope) {\n    this.scope = scope;\n    if(!this.definition) {\n      throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__[\"FunctionNameError\"](this.identifier, this.scope);\n    }\n    this.returns = this.definition.returns;\n    _function_data_js__WEBPACK_IMPORTED_MODULE_0__[\"assertScope\"](this.identifier, this.definition.scope, this.scope);\n    \n    this.args.forEach(arg => {\n      if(arg.init) arg.init(scope);\n    });\n    \n    _function_data_js__WEBPACK_IMPORTED_MODULE_0__[\"assertArgTypes\"](this.identifier, this.args, this.definition.types, this.scope);\n  }\n  link(ASTs, parentStyle, parentTrack) {\n    this.args.forEach(arg => {\n      if(arg.link) arg.link(ASTs, parentStyle, parentTrack);\n    });\n  }\n  execute(songIterator) {\n    if(!this.scope) throw new Error('function not initialized :(');\n    let evaluated_args = this.args.map(arg => {\n      if(arg.execute) {\n        return arg.execute(songIterator);\n      } else {\n        return arg;\n      }\n    });\n    let return_value = this.definition.execute(evaluated_args, this.scope);\n    if(return_value === undefined) {\n      throw new Error(`Function \"${this.identifier}\" can return undefined`);\n    }\n    return return_value;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/FunctionCall.js?");

/***/ }),

/***/ "./src/ast/GlobalScope.js":
/*!********************************!*\
  !*** ./src/ast/GlobalScope.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GlobalScope; });\n/* harmony import */ var _type_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type_utils.js */ \"./src/ast/type_utils.js\");\n/* harmony import */ var _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MIDI/Note.js */ \"./src/MIDI/Note.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"./src/ast/errors.js\");\n/* harmony import */ var _Scope_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Scope.js */ \"./src/ast/Scope.js\");\n/* harmony import */ var _ConfigStatements_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ConfigStatements.js */ \"./src/ast/ConfigStatements.js\");\n/* harmony import */ var _Track_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Track.js */ \"./src/ast/Track.js\");\n\n\n\n\n\n\n\nclass GlobalScope extends _Scope_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor(statements) {\n    super();\n    \n    this.name = 'global';\n    this.type = 'global';\n    \n    this.statements = statements;\n  }\n  \n  init() {\n    // set some default values\n    this.vars.set('octave', 2);\n    this.vars.set('volume', 1);\n    this.vars.set('private', false);\n    this.vars.set('time-signature', [4, 4]);\n    this.vars.set('tempo', 120);\n    \n    this.tracks = new Map();\n    this.meta = [];\n    // @TODO: stop circular dependencies? cache them and mark one as mom\n    this.importedStyles = new Map();\n    this.trackCalls = [];\n    this.dependencies = [];\n    \n    for(let statement of this.statements) {\n      if(statement instanceof _ConfigStatements_js__WEBPACK_IMPORTED_MODULE_4__[\"MetaStatement\"]\n        || statement instanceof _ConfigStatements_js__WEBPACK_IMPORTED_MODULE_4__[\"OptionsStatement\"]) {\n        // @TODO: make sure there's exactly 1 meta block\n        this.meta.push(statement);\n      } else if(statement instanceof _ConfigStatements_js__WEBPACK_IMPORTED_MODULE_4__[\"ImportStatement\"]) {\n        this.importedStyles.set(statement.identifier, statement.path);\n        this.dependencies.push(statement.path);\n      } else if(statement instanceof _Track_js__WEBPACK_IMPORTED_MODULE_5__[\"TrackStatement\"]) {\n        this.tracks.set(statement.name, statement);\n      } else if(statement instanceof _Track_js__WEBPACK_IMPORTED_MODULE_5__[\"TrackCall\"]) {\n        this.trackCalls.push(statement);\n      }\n    }\n    // handle meta blocks first since they set variables in own scope\n    this.meta.forEach(statement => statement.init(this));\n    \n    // -- handle importing before statements --\n    \n    this.tracks.forEach(statement => statement.init(this));\n  }\n  link(ASTs) {\n    for(let trackCall of this.trackCalls) {\n      // get path name of style\n      let importPath = this.importedStyles.get(trackCall.import);\n      \n      let ast = ASTs.get(importPath);\n      if(!ast) throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__[\"NoSuchStyleError\"](trackCall.import, this);\n      let trackStatement = ast.tracks.get(trackCall.track);\n      if(!trackStatement) throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__[\"NoSuchTrackError\"](\n        trackCall.import,\n        trackCall.track,\n        this);\n      //trackCall.trackStatement = trackStatement;\n      this.tracks.set(`${trackCall.import}.${trackCall.track}`, trackStatement);\n    }\n    \n    for(let [trackname, track] of this.tracks) {\n      track.link(ASTs, this);\n    }\n  }\n  execute(songIterator) {\n    let notes = new _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_1__[\"NoteSet\"]();\n    for(let [trackname, track] of this.tracks) {\n      let trackNotes = track.execute(songIterator);\n      if(trackNotes !== _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"]) {\n        notes.push(...trackNotes);\n      }\n    }\n    return notes;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/GlobalScope.js?");

/***/ }),

/***/ "./src/ast/Pattern.js":
/*!****************************!*\
  !*** ./src/ast/Pattern.js ***!
  \****************************/
/*! exports provided: PatternExpressionGroup, PatternStatement, PatternCall, JoinedPatternExpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PatternExpressionGroup\", function() { return PatternExpressionGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PatternStatement\", function() { return PatternStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PatternCall\", function() { return PatternCall; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JoinedPatternExpression\", function() { return JoinedPatternExpression; });\n/* harmony import */ var _type_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type_utils.js */ \"./src/ast/type_utils.js\");\n/* harmony import */ var _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MIDI/Note.js */ \"./src/MIDI/Note.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"./src/ast/errors.js\");\n/* harmony import */ var _Scope_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Scope.js */ \"./src/ast/Scope.js\");\n/* harmony import */ var _FunctionCall_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FunctionCall.js */ \"./src/ast/FunctionCall.js\");\n/* harmony import */ var _BeatGroups_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BeatGroups.js */ \"./src/ast/BeatGroups.js\");\n\n\n\n\n\n\n\nclass PatternExpressionGroup extends _Scope_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor(expressions) {\n    super();\n    this.type = 'PatternExpressionGroup';\n    this.name = '@pattern(<anonymous>)';\n    \n    this.vars.set('private', false);\n    this.vars.set('chance', 1);\n    \n    this.expressions = expressions;\n    this.function_calls = [];\n    this.non_function_call_expressions = [];\n  }\n  init(scope, patternStatement = null) {\n    super.init(scope);\n    this.patternStatement = patternStatement;\n    if(this.patternStatement) {\n      this.name = `@pattern(${this.patternStatement})`;\n    }\n    this.expressions.forEach(expression => {\n      if(expression.init) {\n        expression.init(this);\n      } else {\n        throw ['expression not initialized:', expression];\n      }\n      if(expression instanceof _FunctionCall_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]) {\n        this.function_calls.push(expression);\n      } else {\n        this.non_function_call_expressions.push(expression);\n      }\n    });\n  }\n  link(ASTs, parentStyle, parentTrack) {\n    this.expressions.forEach(expression => {\n      expression.link(ASTs, parentStyle, parentTrack);\n    });\n  }\n  execute(songIterator, callerIsTrack = false) {\n    let beats = _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"];\n    for(let function_call of this.function_calls) {\n      let return_value = function_call.execute(songIterator);\n      if(return_value instanceof _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_1__[\"NoteSet\"]) {\n        if(beats !== _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"]) {\n          throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__[\"TooManyBeatsError\"](this);\n        }\n        beats = return_value;\n      }\n    }\n    if(callerIsTrack && this.vars.get('private') === true) {\n      return _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"]; // if it's private we can give up now\n    }\n    for(let expression of this.non_function_call_expressions) {\n      if(expression.execute) {\n        expression = expression.execute(songIterator);\n      }\n      if(expression instanceof _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_1__[\"NoteSet\"]) {\n        if(beats !== _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"]) {\n          throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__[\"TooManyBeatsError\"](this);\n        }\n        beats = expression;\n      }\n    }\n    return beats\n  }\n}\n\nclass PatternStatement extends PatternExpressionGroup {\n  constructor(opts) {\n    if(opts.expression instanceof PatternExpressionGroup) {\n      // unroll the redundant expression group\n      super(opts.expression.expressions);\n    } else {\n      super([opts.expression]);\n    }\n    this.identifier = opts.identifier;\n    this.condition = (opts.condition !== undefined) ? opts.condition : null;\n  }\n  getChance() {\n    return this.vars.get('chance');\n  }\n  link(ASTs, parentStyle, parentTrack) {\n    super.link(ASTs, parentStyle, parentTrack);\n    if(this.condition && this.condition.link) {\n      this.condition.link(ASTs, parentStyle, parentTrack);\n    }\n  }\n  init(scope) {\n    super.init(scope);\n    if(this.condition && this.condition.init) this.condition.init(this);\n  }\n  execute(songIterator, callerIsTrack) {\n    if(this.condition) {\n      let condition_value = this.condition.execute();\n      if(Object(_type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"cast_bool\"])(condition_value) === false) return _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"];\n    }\n    return super.execute(songIterator, callerIsTrack);\n  }\n}\n\nclass PatternCall {\n  constructor(opts) {\n    this.import = opts.import || null;\n    this.track = opts.track || null;\n    this.pattern = opts.pattern;\n    this.scope = null;\n    this.patternStatement = null;\n    this.prettyprintname = (this.import || 'this') + '.' +\n      (this.track || 'this') + '.' +\n      this.pattern;\n  }\n  getChance() {\n    return this.patternStatement.getChance()();\n  }\n  init(scope) {\n    this.scope = scope;\n  }\n  link(ASTs, parentStyle, parentTrack) {\n    let ast;\n    if(this.import === null) {\n      ast = parentStyle\n    } else {\n      // get path name of style\n      let importPath = parentStyle.importedStyles.get(this.import);\n      ast = ASTs.get(importPath);\n      if(!ast) throw new NoSuchStyleError(this.import, this);\n    }\n    let track;\n    if(this.track === null) {\n      track = parentTrack;\n    } else {\n      track = ast.tracks.get(this.track);\n      if(!track) throw new NoSuchTrackError(\n        this.import || 'this',\n        this.track || 'this',\n        this);\n    }\n    let patternStatement = track.patterns.get(this.pattern);\n    if(!patternStatement) throw new NoSuchPatternError(\n      this.import || 'this',\n      this.track || 'this',\n      this.pattern,\n      this);\n    this.patternStatement = patternStatement;\n  }\n  execute(songIterator) {\n    // called patternStatement ignores private()\n    return this.patternStatement.execute(songIterator);\n  }\n}\n\nclass JoinedPatternExpression {\n  constructor(patterns) {\n    this.patterns = patterns;\n  }\n  init(scope) {\n    this.scope = scope;\n    this.patterns.forEach(pattern => {\n      if(pattern.init) pattern.init(scope);\n    });\n  }\n  link(ASTs, parentStyle, parentTrack) {\n    this.patterns.forEach(pattern => {\n      pattern.link(ASTs, parentStyle, parentTrack);\n    });\n  }\n  execute(songIterator) {\n    let noteSets = [];\n    for(let pattern of this.patterns) {\n      if(pattern.execute) {\n        pattern = pattern.execute(songIterator);\n      }\n      if(pattern instanceof _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_1__[\"NoteSet\"]) {\n        noteSets.push(pattern);\n      }\n    }\n    if(noteSets.length) {\n      return (new _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_1__[\"NoteSet\"]()).concat(...noteSets);\n    } else {\n      return _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"];\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/Pattern.js?");

/***/ }),

/***/ "./src/ast/Scope.js":
/*!**************************!*\
  !*** ./src/ast/Scope.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Scope; });\n/*\n * In Playback styles, basically any pair of curly brackets defines a scope\n * which inherits settings from its parent scope but can overwrite them.\n */\nclass Scope {\n  constructor() {\n    this.vars = new Map();\n    this.name = null;\n    this.type = null;\n    this.scope = null;\n  }\n  init(scope) { // parent scope, if that's unclear\n    this.scope = scope;\n    \n    // in case this.vars was set in the constructor\n    this.vars = new Map([...this.scope.vars, ...this.vars]);\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/Scope.js?");

/***/ }),

/***/ "./src/ast/Track.js":
/*!**************************!*\
  !*** ./src/ast/Track.js ***!
  \**************************/
/*! exports provided: TrackStatement, TrackCall */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TrackStatement\", function() { return TrackStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TrackCall\", function() { return TrackCall; });\n/* harmony import */ var _type_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type_utils.js */ \"./src/ast/type_utils.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"./src/ast/errors.js\");\n/* harmony import */ var _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../MIDI/Note.js */ \"./src/MIDI/Note.js\");\n/* harmony import */ var _Scope_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Scope.js */ \"./src/ast/Scope.js\");\n/* harmony import */ var _FunctionCall_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FunctionCall.js */ \"./src/ast/FunctionCall.js\");\n/* harmony import */ var _Pattern_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Pattern.js */ \"./src/ast/Pattern.js\");\n\n\n\n\n\n\n\nclass TrackStatement extends _Scope_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor(opts) {\n    super();\n    this.name = opts.identifier;\n    this.type = '@track';\n    \n    this.instrument = opts.instrument;\n    this.identifier = opts.identifier;\n    this.members = opts.members;\n  }\n  init(scope) {\n    super.init(scope);\n    this.function_calls = [];\n    this.patterns = new Map();\n    this.patternCalls = [];\n    this.members.forEach(member => {\n      // initialize them all now, var inheritence is handled during execution\n      member.init(this);\n      if(member instanceof _FunctionCall_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]) {\n        this.function_calls.push(member);\n      } else if(member instanceof _Pattern_js__WEBPACK_IMPORTED_MODULE_5__[\"PatternStatement\"]) {\n        this.patterns.set(member.identifier, member);\n      } else if(member instanceof _Pattern_js__WEBPACK_IMPORTED_MODULE_5__[\"PatternCall\"]) {\n        this.patternCalls.push(member);\n      }\n    });\n  }\n  link(ASTs, parentStyle) {\n    for(let patternCall of this.patternCalls) {\n      patternCall.link(ASTs, parentStyle, this);\n      this.patterns.set(patternCall.prettyprintname, patternCall);\n    }\n    \n    for(let [patternname, pattern] of this.patterns) {\n      pattern.link(ASTs, parentStyle, this);\n    }\n  }\n  execute(songIterator) {\n    console.log(`executing TrackStatement \"${this.name}\"`);\n    \n    this.function_calls.forEach(function_call => {\n      function_call.execute(songIterator);\n    });\n    \n    // https://stackoverflow.com/a/4463613/1784306\n    // I don't really understand the above explanation, this is probs wrong\n    let totalWeight = 0;\n    let weightedOptions = [];\n    for(let [patternname, pattern] of this.patterns) {\n      console.log(`- pattern \"${patternname}\":`);\n      // true = I'm the instrument so if you're private return Nil\n      let result = pattern.execute(songIterator, true);\n      console.log('  - Result:', result);\n      // @TODO: handle multi-measure patterns (via locks?)\n      if(result !== _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"]) {\n        for(let note of result) {\n          if (note.pitch === _MIDI_Note_js__WEBPACK_IMPORTED_MODULE_2__[\"AwaitingDrum\"]) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__[\"DrumBeatInMelodicBeatGroupError\"](pattern);\n          }\n        }\n        \n        let chance = pattern.getChance();\n        weightedOptions.push({\n          noteSet: result,\n          lower: totalWeight,\n          upper: totalWeight + chance\n        });\n        totalWeight += chance;\n      }\n    }\n    // binary search would make sense here if I expected more items\n    let goal = Math.random() * totalWeight;\n    for(let option of weightedOptions) {\n      if(option.lower <= goal && goal <= option.upper) {\n        console.log('  - Final result:', option.noteSet);\n        return option.noteSet;\n      }\n    }\n    console.log('  - Final result:', _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"]);\n    return _type_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"Nil\"];\n  }\n}\nclass TrackCall {\n  constructor(opts) {\n    this.import = opts.import;\n    this.track = opts.track;\n    this.trackStatement = null; // will be set by the loader.\n  }\n  execute(songIterator) {\n    this.trackStatement.execute(songIterator);\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/Track.js?");

/***/ }),

/***/ "./src/ast/ast_nodes.js":
/*!******************************!*\
  !*** ./src/ast/ast_nodes.js ***!
  \******************************/
/*! exports provided: GlobalScope, MetaStatement, OptionsStatement, ImportStatement, TrackStatement, TrackCall, PatternStatement, PatternExpressionGroup, PatternCall, JoinedPatternExpression, FunctionCall, AnchorArgument, BooleanNot, BooleanAnd, BooleanOr, BeatGroupLiteral, Measure, DrumBeatGroupLiteral, MelodicBeatLiteral, DrumBeatLiteral */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GlobalScope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GlobalScope.js */ \"./src/ast/GlobalScope.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GlobalScope\", function() { return _GlobalScope_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _ConfigStatements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConfigStatements.js */ \"./src/ast/ConfigStatements.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MetaStatement\", function() { return _ConfigStatements_js__WEBPACK_IMPORTED_MODULE_1__[\"MetaStatement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OptionsStatement\", function() { return _ConfigStatements_js__WEBPACK_IMPORTED_MODULE_1__[\"OptionsStatement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImportStatement\", function() { return _ConfigStatements_js__WEBPACK_IMPORTED_MODULE_1__[\"ImportStatement\"]; });\n\n/* harmony import */ var _Track_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Track.js */ \"./src/ast/Track.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TrackStatement\", function() { return _Track_js__WEBPACK_IMPORTED_MODULE_2__[\"TrackStatement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TrackCall\", function() { return _Track_js__WEBPACK_IMPORTED_MODULE_2__[\"TrackCall\"]; });\n\n/* harmony import */ var _Pattern_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Pattern.js */ \"./src/ast/Pattern.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PatternStatement\", function() { return _Pattern_js__WEBPACK_IMPORTED_MODULE_3__[\"PatternStatement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PatternExpressionGroup\", function() { return _Pattern_js__WEBPACK_IMPORTED_MODULE_3__[\"PatternExpressionGroup\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PatternCall\", function() { return _Pattern_js__WEBPACK_IMPORTED_MODULE_3__[\"PatternCall\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JoinedPatternExpression\", function() { return _Pattern_js__WEBPACK_IMPORTED_MODULE_3__[\"JoinedPatternExpression\"]; });\n\n/* harmony import */ var _FunctionCall_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FunctionCall.js */ \"./src/ast/FunctionCall.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FunctionCall\", function() { return _FunctionCall_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _ArgumentOperators_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ArgumentOperators.js */ \"./src/ast/ArgumentOperators.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AnchorArgument\", function() { return _ArgumentOperators_js__WEBPACK_IMPORTED_MODULE_5__[\"AnchorArgument\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BooleanNot\", function() { return _ArgumentOperators_js__WEBPACK_IMPORTED_MODULE_5__[\"BooleanNot\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BooleanAnd\", function() { return _ArgumentOperators_js__WEBPACK_IMPORTED_MODULE_5__[\"BooleanAnd\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BooleanOr\", function() { return _ArgumentOperators_js__WEBPACK_IMPORTED_MODULE_5__[\"BooleanOr\"]; });\n\n/* harmony import */ var _BeatGroups_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BeatGroups.js */ \"./src/ast/BeatGroups.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BeatGroupLiteral\", function() { return _BeatGroups_js__WEBPACK_IMPORTED_MODULE_6__[\"BeatGroupLiteral\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Measure\", function() { return _BeatGroups_js__WEBPACK_IMPORTED_MODULE_6__[\"Measure\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DrumBeatGroupLiteral\", function() { return _BeatGroups_js__WEBPACK_IMPORTED_MODULE_6__[\"DrumBeatGroupLiteral\"]; });\n\n/* harmony import */ var _BeatLiterals_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./BeatLiterals.js */ \"./src/ast/BeatLiterals.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MelodicBeatLiteral\", function() { return _BeatLiterals_js__WEBPACK_IMPORTED_MODULE_7__[\"MelodicBeatLiteral\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DrumBeatLiteral\", function() { return _BeatLiterals_js__WEBPACK_IMPORTED_MODULE_7__[\"DrumBeatLiteral\"]; });\n\n/**\n * Constructors for most kinds of nodes in the AST (excuding strings and things\n * that can be represented more easily by their JS value).\n *\n * It's probably bad form/risky to parse directly to the form that's\n * interpreted. Eh.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/ast/ast_nodes.js?");

/***/ }),

/***/ "./src/ast/errors.js":
/*!***************************!*\
  !*** ./src/ast/errors.js ***!
  \***************************/
/*! exports provided: ImportError, NoSuchStyleError, NoSuchTrackError, NoSuchPatternErrorError, FunctionNameError, FunctionScopeError, FunctionArgumentsError, TooManyBeatsError, MelodicBeatInDrumBeatGroupError, DrumBeatInMelodicBeatGroupError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImportError\", function() { return ImportError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoSuchStyleError\", function() { return NoSuchStyleError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoSuchTrackError\", function() { return NoSuchTrackError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoSuchPatternErrorError\", function() { return NoSuchPatternErrorError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionNameError\", function() { return FunctionNameError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionScopeError\", function() { return FunctionScopeError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionArgumentsError\", function() { return FunctionArgumentsError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TooManyBeatsError\", function() { return TooManyBeatsError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MelodicBeatInDrumBeatGroupError\", function() { return MelodicBeatInDrumBeatGroupError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DrumBeatInMelodicBeatGroupError\", function() { return DrumBeatInMelodicBeatGroupError; });\n// does this have to be an Error? idc\nclass PlaybackError extends Error {\n  constructor(message, scope) {\n    super(`${message}\\nScope: \"${scope.name}\"`)\n  }\n}\n\n/* Import-related errors */\nclass ImportError extends PlaybackError {\n  constructor() {\n    super(...arguments);\n  }\n}\nclass NoSuchStyleError extends ImportError {\n  constructor(identifier, scope) {\n    super(`No style with the name \"${identifier}\" was imported`, scope);\n  }\n}\nclass NoSuchTrackError extends ImportError {\n  constructor(style, track, scope) {\n    super(\n      `No track with the name \"${track}\" exists in the style \"${style}\"`,\n      scope);\n  }\n}\nclass NoSuchPatternErrorError extends ImportError {\n  constructor(style, track, pattern, scope) {\n    super(\n      `Pattern \"${style}.${track}.${pattern}\" does not exist`,\n      scope);\n  }\n}\n\n/* Function-related errors */\nclass FunctionNameError extends PlaybackError {\n  constructor(identifier, scope) {\n    super(`No function exists with name \"${identifier}\"`, scope);\n  }\n}\nclass FunctionScopeError extends PlaybackError {\n  constructor(message, scope) {\n    super(message, scope);\n  }\n}\nclass FunctionArgumentsError extends PlaybackError {\n  constructor(message, scope) {\n    super(message, scope);\n  }\n}\n\n/* Pattern-related errors */\nclass TooManyBeatsError extends PlaybackError {\n  constructor(scope) {\n    super(\n      'Pattern may only contain 1 BeatGroup. Try the join operator \"&\"',\n      scope);\n  }\n}\n\n/* Beat-related errors*/\nclass MelodicBeatInDrumBeatGroupError extends PlaybackError {\n  constructor(scope) {\n    super('Unexpected Melodic Beat in a Drum Beat Group', scope);\n  }\n}\nclass DrumBeatInMelodicBeatGroupError extends PlaybackError {\n  constructor(scope) {\n    super('Unexpected Drum Beat in a Melodic Beat Group', scope);\n  }\n}\n\n\n//# sourceURL=webpack:///./src/ast/errors.js?");

/***/ }),

/***/ "./src/ast/function_data.js":
/*!**********************************!*\
  !*** ./src/ast/function_data.js ***!
  \**********************************/
/*! exports provided: assertArgTypes, assertScope, definitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assertArgTypes\", function() { return assertArgTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assertScope\", function() { return assertScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"definitions\", function() { return definitions; });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"./src/ast/errors.js\");\n/* harmony import */ var _FunctionCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FunctionCall.js */ \"./src/ast/FunctionCall.js\");\n/* harmony import */ var _type_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type_utils.js */ \"./src/ast/type_utils.js\");\n\n\n\n\nlet definitions = new Map();\n\n/**\n * Make an assertion about argument count and types.\n * @param {string} identifier The function name.\n * @param {Array} args The arguments passed to the function.\n * @param {Array.<string|Function>} types Array of the types (typeof) or classes\n * (instanceof) to expect.\n * @param {Scope} scope The scope, for error logging.\n */\nfunction assertArgTypes(identifier, args, types, scope) {\n  if(types == '*') return;\n  if(args.length != types.length) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgumentsError\"](`\"${identifier}\" requires ${types.length} arguments.`, scope);\n  }\n  for(let i in args) {\n    if(types[i] == '*') continue;\n    let arg = args[i];\n    if(arg instanceof _FunctionCall_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      arg = arg.returns;\n      if(arg == '*') {\n        continue; // what's the correct functionality here? cry?\n      } else if(typeof types[i] == 'string') {\n        if(arg != types[i]) {\n          throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgumentsError\"](`Argument ${Number(i)+1} of \"${identifier}\" must be a ${types[i]}.`, scope);\n        }\n      } else {\n        if(arg != types[i]) {\n          throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgumentsError\"](`Argument ${Number(i)+1} of \"${identifier}\" must be a ${types[i].name}.`, scope);\n        }\n      }\n    } else {\n      if(typeof types[i] == 'string') {\n        if(typeof arg != types[i]) {\n          throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgumentsError\"](`Argument ${Number(i)+1} of \"${identifier}\" must be a ${types[i]}.`, scope);\n        }\n      } else {\n        if(!(arg instanceof types[i])) {\n          throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgumentsError\"](`Argument ${Number(i)+1} of \"${identifier}\" must be a ${types[i].name}.`, scope);\n        }\n      }\n    }\n  }\n}\n/**\n * Make an assertion about the scope in which the function is called.\n * @param {string} identifier The function's name.\n * @param {string='no-meta'} goalscope One of 4 string options:\n * - 'meta': the function throws if it's called outside a @meta block.\n * - 'options': the function throws if it's called outside an @options block.\n * - 'no-config': the function throws if it's called inside a @meta or @options\n *   block, but runs anywhere else that the parser will let you call a function.\n * - 'pattern': the function throws if called outside a pattern scope.\n * - 'no-meta' (default): the function throws if it's called inside a @meta\n *   block, but runs anywhere else that the parser will let you call a function.\n * @param {Scope} scope The calling scope.\n */\nfunction assertScope(identifier, goalscope = 'no-meta', scope) {\n  if(goalscope == 'meta') {\n    if(scope.type != '@meta') {\n      throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionScopeError\"](`Function \"${identifier}\" must only be called within a @meta block.\"`, scope);\n    }\n  } else if(goalscope == 'options') {\n    if(scope.type != '@options') {\n      throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionScopeError\"](`Function \"${identifier}\" must only be called within an @options block.\"`, scope);\n    }\n  } else if(goalscope == 'no-config') {\n    // ensure that config blocks can be resolved at compile time\n    if(scope.type == '@meta' || scope.type == '@options') {\n      throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionScopeError\"](`Function \"${identifier}\" must not be called within a @meta or @options block.\"`, scope);\n    }\n  } else if(goalscope == 'pattern') { \n    if(scope.type != 'PatternExpressionGroup') {\n      throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionScopeError\"](`Function \"${identifier}\" must only be called within a @pattern block.\"`, scope);\n    }\n    // @TODO: what about @pattern foo private() -- makes no sense but yea\n  } else if(goalscope == 'no-meta') { \n    if(scope.type == '@meta') {\n      throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionScopeError\"](`Function \"${identifier}\" must not be called within a @meta block.\"`, scope);\n    }\n  }\n}\n/**\n * Define a function.\n * @param {string} identifier The name of the function.\n * @param {Object} opts Options passed. See below.\n * @param {Array.<string|Function>|string='*'} opts.types If set, throw error\n * unless the arguments passed to the function map to these. Can be strings\n * (typeof) or classes (instanceof), or the single string '*' to accept\n * anything. See assertArgTypes above.\n * @param {string='no-meta'} opts.scope Throw error unless the calling\n * scope matches. See assertScope above.\n * @param {string|Function|Nil='*'} opts.returns The return type. If set to '*'\n * it may return anything (for example, choose() returns one of whatever's\n * passed to it regardless of type).\n * @param {Function} func The function to run. It's passed 3 arguments:\n * - args: an array of the arguments passed in the Playback function call.\n * - scope: the calling scope. So it can set in scope.vars.\n * - argErr: a function. If the function does further testing on its\n *   arguments and there's an issue, pass this the error message and it throws.\n */\nlet define = function(identifier, opts, func) {\n  let definition = {\n    types: opts.types || '*',\n    returns: opts.returns || '*',\n    scope: opts.scope || 'no-meta',\n    execute: (args, scope) => {\n      let argErr = message => {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgumentsError\"](message, scope);\n      };\n      return func(args, scope, argErr);\n    }\n  };\n  \n  definitions.set(identifier, definition);\n}\n\n/**\n * Quickly define a single-argument function that simply sets a var of the same\n * name in its parent scope.\n * @param {string} identifier The name of the function.\n * @param {string|Function} type Throw unless the argument is of this type (see\n * assertArgTypes above).\n * @param {?string=null} goalscope Throw error unless the calling scope matches.\n * See assertScope above.\n */\nlet defineVar = function(identifier, type, goalscope = null) {\n  let opts = {\n    types: [type],\n    scope: goalscope,\n    returns: _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"]\n  };\n  define(identifier, opts, (args, scope, argErr) => {\n    scope.vars.set(identifier, args[0]);\n    return _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"];\n  })\n}\n\n/**\n * Quickly define a function that sets a a var of the same name in its parent\n * scope. If it has 0 args it sets the var to true, if it has 1 boolean arg\n * it sets the var to that.\n * @param {string} identifier The name of the function.\n * @param {?string=null} goalscope Throw error unless the calling scope matches.\n * See assertScope above.\n */\nlet defineBoolean = function(identifier, goalscope = null) {\n  let opts = {\n    types: '*',\n    scopes: goalscope,\n    returns: _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"]\n  }\n  define(identifier, opts, (args, scope, argErr) => {\n    if(args.length) {\n      assertArgTypes(identifier, args, ['boolean'], scope);\n      scope.vars.set(identifier, args[0]);\n    } else {\n      scope.vars.set(identifier, true);\n    }\n    return _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"];\n  })\n}\n\n/*********** ACTUAL FUNCTION DEFINITIONS ***********/\n\n/*** @meta functions ***/\ndefineVar('name', 'string', 'meta');\ndefineVar('author', 'string', 'meta');\ndefineVar('description', 'string', 'meta');\ndefineVar('playback-version', 'number', 'meta');\n\n/*** @options functions ***/\ndefine('time-signature',\n  {\n    types: ['number', 'number'],\n    scope: 'options',\n    returns: _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"]\n  },\n  (args, scope, argErr) => {\n    if(!Number.isInteger(Math.log2(args[1]))) {\n      argErr('Argument 2 of \"time-signature\" must be a power of 2.');\n    }\n    scope.vars.set('time-signature', [args[0], args[1]]);\n    return _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"];\n  });\ndefineBoolean('swing', 'options');\n\n/*** anywhere but @meta functions ***/\ndefine('volume',\n  {\n    types: ['number'],\n    scope: 'no-meta',\n    returns: _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"]\n  },\n  (args, scope, argErr) => {\n    if(args[0] < 0 || args[0] > 1) {\n      argErr('Argument 1 of \"volume\" must be in range 0-1 (inclusive).');\n    }\n    scope.vars.set('volume', args[0]);\n    return _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"];\n  });\ndefineBoolean('invertible', 'no-meta');\ndefineVar('octave', 'number', 'no-meta');\n\n/*** anywhere but config functions (strictly dynamic functions) ***/\ndefine('choose',\n  {\n    types: '*',\n    scope: 'no-config',\n    returns: '*'\n  },\n  (args, scope, argErr) => {\n    let nonNilArgs = args.filter(arg => arg !== _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"]);\n    if(nonNilArgs.length) {\n      let index = Math.floor(Math.random() * nonNilArgs.length);\n      return nonNilArgs[index];\n    } else {\n      return _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"];\n    }\n  });\n\ndefine('progression',\n  {\n    types: '*',\n    scope: 'no-config',\n    returns: 'boolean'\n  },\n  (args, scope, argErr) => {\n    return true; // @TODO\n  });\ndefine('in-scale',\n  {\n    types: '*',\n    scope: 'no-config',\n    returns: 'boolean'\n  },\n  (args, scope, argErr) => {\n    return false; // @TODO\n  });\n\n/*** pattern-only functions ***/\ndefineBoolean('private', 'pattern');\ndefineVar('length', 'number', 'pattern');\ndefine('chance',\n  {\n    types: ['number'],\n    scope: 'pattern',\n    returns: _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"]\n  },\n  (args, scope, argErr) => {\n    if(args[0] < 0 || args[0] > 1) {\n      argErr('Argument 1 of \"chance\" must be in range 0-1 (inclusive).');\n    }\n    scope.vars.set('chance', args[0]);\n    return _type_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"Nil\"];\n  });\n\n\n\n\n//# sourceURL=webpack:///./src/ast/function_data.js?");

/***/ }),

/***/ "./src/ast/type_utils.js":
/*!*******************************!*\
  !*** ./src/ast/type_utils.js ***!
  \*******************************/
/*! exports provided: Nil, cast_bool */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Nil\", function() { return Nil; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cast_bool\", function() { return cast_bool; });\nlet Nil = Symbol('Nil');\nlet cast_bool = function(arg) {\n  if(arg === Nil || arg === false) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n\n\n//# sourceURL=webpack:///./src/ast/type_utils.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _loader_loader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loader/loader.js */ \"./src/loader/loader.js\");\n/* harmony import */ var _parser_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/parser.js */ \"./src/parser/parser.js\");\n/* harmony import */ var _PlaybackStyle_PlaybackStyle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PlaybackStyle/PlaybackStyle.js */ \"./src/PlaybackStyle/PlaybackStyle.js\");\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  load: _loader_loader_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].load,\n  PlaybackStyle: _PlaybackStyle_PlaybackStyle_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  /**\n   * is there a way to link here to the jsdoc where the function is defined?\n   */\n  parse: _parser_parser_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parse\n});\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/lexer/lexer.js":
/*!****************************!*\
  !*** ./src/lexer/lexer.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var moo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moo */ \"./node_modules/moo/moo.js\");\n/* harmony import */ var moo__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moo__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (moo__WEBPACK_IMPORTED_MODULE_0___default.a.states({\n  main: {\n    comment: {\n      match:/\\/\\/.*?(?:\\n|$)/, // consuming newline should be fine since this is _?. Can I do eof anchor here? Guess we'll find out \n      lineBreaks: true\n    },\n    quoted_string: /\"(?:[^\\\\\"\\n]|\\\\.)*\"/, // thanx https://stackoverflow.com/a/249937/1784306\n    ws: {\n      match: /\\s+/,\n      lineBreaks: true\n    },\n    at_rule: ['@meta', '@options', '@import', '@track', '@pattern'],\n    identifier: {\n      // start with alpha, may contain digits and dashes but not end with dash\n      match: /[a-zA-z](?:[a-zA-Z\\-\\d]*[a-zA-Z\\d])?/,\n      keywords: {\n        keyword: ['if', 'as'],\n        boolean: ['true', 'false']\n      }\n    },\n    number: /(?:\\d*\\.)?\\d+/,\n    brackets: ['{', '}', '(', ')'],\n    left_angle: {match: '<', push: 'beat'},\n    operators: ['&', '+', '-', '*', '/', '.']\n  },\n  beat: {\n    beat_ws: / +/,\n    beat_colon: ':',\n    beat_number: /(?:\\d*\\.)?\\d+/,\n    beat_flag: /[a-zA-Z]/,\n    beat_right_angle: {match: '>', pop: true},\n    beat_operators: ['|', '+', '-', '*', '/']\n  }\n}));\n\n\n//# sourceURL=webpack:///./src/lexer/lexer.js?");

/***/ }),

/***/ "./src/loader/loader.js":
/*!******************************!*\
  !*** ./src/loader/loader.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(__dirname) {/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n // lol this shouldn't be allowed\n\n/**\n * Style locator algorithm:\n * if the path begins with . or / look in the filesystem\n * If the path begins with a protocol, look on the internet\n * otherwise, look in:\n * 1. styles folder in this repo\n * 2. (node_modules equivalent?)\n * 3. a styles repo to be created later\n * (in either case, if the path doesn't end in .play it's implied, but other\n * file names are respected)\n * note to self: that means no dots in style names\n * @TODO: deal with relative paths outside of the repo vs inside\n * @TODO: windows/unix - https://nodejs.org/api/path.html#path_windows_vs_posix\n */\n \n const path = __webpack_require__(/*! path */ \"path\");\n\n/**\n * Load a file.\n * (node is working on implementing fs promises but they're behind a flag iirc)\n * @param {string} path The path to the file to load.\n * @return {Promise.<string>} Resolves to the content of the file.\n */\nlet load = function load(stylePath) {\n  return new Promise(function(resolve, reject) {\n    let isRelative = stylePath.startsWith('.') || stylePath.startsWith('/');\n    if(!isRelative) {\n        stylePath = path.join(__dirname, '../../styles/', stylePath + '.play');\n    }\n    fs__WEBPACK_IMPORTED_MODULE_0___default.a.readFile(stylePath, 'utf8', (err, data) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  load: load\n});\n\n/* WEBPACK VAR INJECTION */}.call(this, \"src/loader\"))\n\n//# sourceURL=webpack:///./src/loader/loader.js?");

/***/ }),

/***/ "./src/parser/grammar.ne":
/*!*******************************!*\
  !*** ./src/parser/grammar.ne ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lexer/lexer.js */ \"./src/lexer/lexer.js\");\n/* harmony import */ var _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ast/ast_nodes.js */ \"./src/ast/ast_nodes.js\");\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\nfunction id(x) { return x[0]; }\n\n\n\nlet Lexer = _lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nlet ParserRules = [\n    {\"name\": \"main$macrocall$2\", \"symbols\": [\"TopLevelStatement\"]},\n    {\"name\": \"main$macrocall$1$ebnf$1\", \"symbols\": []},\n    {\"name\": \"main$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [\"_\", \"main$macrocall$2\"], \"postprocess\": d => d[1][0]},\n    {\"name\": \"main$macrocall$1$ebnf$1\", \"symbols\": [\"main$macrocall$1$ebnf$1\", \"main$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"main$macrocall$1\", \"symbols\": [\"main$macrocall$2\", \"main$macrocall$1$ebnf$1\"], \"postprocess\": d => d[0].concat(d[1])},\n    {\"name\": \"main\", \"symbols\": [\"_?\", \"main$macrocall$1\", \"_?\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"GlobalScope\"](d[1])},\n    {\"name\": \"TopLevelStatement\", \"symbols\": [\"ConfigurationStatement\"], \"postprocess\": id},\n    {\"name\": \"TopLevelStatement\", \"symbols\": [\"ImportStatement\"], \"postprocess\": id},\n    {\"name\": \"TopLevelStatement\", \"symbols\": [\"TrackStatement\"], \"postprocess\": id},\n    {\"name\": \"TopLevelStatement\", \"symbols\": [\"TrackCallStatement\"], \"postprocess\": id},\n    {\"name\": \"ConfigurationStatement\", \"symbols\": [{\"literal\":\"@meta\"}, \"_?\", {\"literal\":\"{\"}, \"_?\", \"ConfigurationList\", \"_?\", {\"literal\":\"}\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"MetaStatement\"](d[4])},\n    {\"name\": \"ConfigurationStatement\", \"symbols\": [{\"literal\":\"@options\"}, \"_?\", {\"literal\":\"{\"}, \"_?\", \"ConfigurationList\", \"_?\", {\"literal\":\"}\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"OptionsStatement\"](d[4])},\n    {\"name\": \"ConfigurationList$macrocall$2\", \"symbols\": [\"FunctionCallExpression\"]},\n    {\"name\": \"ConfigurationList$macrocall$1$ebnf$1\", \"symbols\": []},\n    {\"name\": \"ConfigurationList$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [\"_\", \"ConfigurationList$macrocall$2\"], \"postprocess\": d => d[1][0]},\n    {\"name\": \"ConfigurationList$macrocall$1$ebnf$1\", \"symbols\": [\"ConfigurationList$macrocall$1$ebnf$1\", \"ConfigurationList$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"ConfigurationList$macrocall$1\", \"symbols\": [\"ConfigurationList$macrocall$2\", \"ConfigurationList$macrocall$1$ebnf$1\"], \"postprocess\": d => d[0].concat(d[1])},\n    {\"name\": \"ConfigurationList\", \"symbols\": [\"ConfigurationList$macrocall$1\"], \"postprocess\": id},\n    {\"name\": \"ImportStatement\", \"symbols\": [{\"literal\":\"@import\"}, \"_\", \"StringLiteral\", \"_\", {\"literal\":\"as\"}, \"_\", \"Identifier\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ImportStatement\"](d[2], d[6])},\n    {\"name\": \"TrackStatement$macrocall$2\", \"symbols\": [\"TrackMember\"]},\n    {\"name\": \"TrackStatement$macrocall$1$ebnf$1\", \"symbols\": []},\n    {\"name\": \"TrackStatement$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [\"_\", \"TrackStatement$macrocall$2\"], \"postprocess\": d => d[1][0]},\n    {\"name\": \"TrackStatement$macrocall$1$ebnf$1\", \"symbols\": [\"TrackStatement$macrocall$1$ebnf$1\", \"TrackStatement$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"TrackStatement$macrocall$1\", \"symbols\": [\"TrackStatement$macrocall$2\", \"TrackStatement$macrocall$1$ebnf$1\"], \"postprocess\": d => d[0].concat(d[1])},\n    {\"name\": \"TrackStatement\", \"symbols\": [{\"literal\":\"@track\"}, \"_\", \"StringLiteral\", \"_\", {\"literal\":\"as\"}, \"_\", \"Identifier\", \"_?\", {\"literal\":\"{\"}, \"_?\", \"TrackStatement$macrocall$1\", \"_?\", {\"literal\":\"}\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"TrackStatement\"]({instrument: d[2], identifier: d[6], members: d[10]})},\n    {\"name\": \"TrackMember\", \"symbols\": [\"FunctionCallExpression\"], \"postprocess\": id},\n    {\"name\": \"TrackMember\", \"symbols\": [\"PatternStatement\"], \"postprocess\": id},\n    {\"name\": \"TrackMember\", \"symbols\": [\"PatternCallExpression\"], \"postprocess\": id},\n    {\"name\": \"TrackCallStatement\", \"symbols\": [{\"literal\":\"@track\"}, \"_?\", {\"literal\":\"(\"}, \"_?\", \"Identifier\", {\"literal\":\".\"}, \"Identifier\", \"_?\", {\"literal\":\")\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"TrackCall\"]({import: d[4], track: d[6]})},\n    {\"name\": \"PatternStatement\", \"symbols\": [{\"literal\":\"@pattern\"}, \"_\", \"Identifier\", \"_\", \"PatternConditional\", \"_?\", \"PatternExpression\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PatternStatement\"]({identifier: d[2], expression: d[6], condition: d[4]})},\n    {\"name\": \"PatternStatement\", \"symbols\": [{\"literal\":\"@pattern\"}, \"_\", \"Identifier\", \"_\", \"PatternExpression\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PatternStatement\"]({identifier: d[2], expression: d[4]})},\n    {\"name\": \"PatternConditional\", \"symbols\": [{\"literal\":\"if\"}, \"_?\", {\"literal\":\"(\"}, \"_?\", \"FunctionCallArgument\", \"_?\", {\"literal\":\")\"}], \"postprocess\": d => d[4]},\n    {\"name\": \"PatternExpression\", \"symbols\": [\"PatternExpression_NoJoin\"], \"postprocess\": id},\n    {\"name\": \"PatternExpression\", \"symbols\": [\"JoinedPatternExpression\"], \"postprocess\": id},\n    {\"name\": \"PatternExpression_NoJoin\", \"symbols\": [\"PatternExpressionGroup\"], \"postprocess\": id},\n    {\"name\": \"PatternExpression_NoJoin\", \"symbols\": [\"BeatGroupLiteral\"], \"postprocess\": id},\n    {\"name\": \"PatternExpression_NoJoin\", \"symbols\": [\"DrumBeatGroupLiteral\"], \"postprocess\": id},\n    {\"name\": \"PatternExpression_NoJoin\", \"symbols\": [\"FunctionCallExpression\"], \"postprocess\": id},\n    {\"name\": \"PatternExpression_NoJoin\", \"symbols\": [\"PatternCallExpression\"], \"postprocess\": id},\n    {\"name\": \"PatternExpressionGroup$macrocall$2\", \"symbols\": [\"PatternExpression\"]},\n    {\"name\": \"PatternExpressionGroup$macrocall$1$ebnf$1\", \"symbols\": []},\n    {\"name\": \"PatternExpressionGroup$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [\"_\", \"PatternExpressionGroup$macrocall$2\"], \"postprocess\": d => d[1][0]},\n    {\"name\": \"PatternExpressionGroup$macrocall$1$ebnf$1\", \"symbols\": [\"PatternExpressionGroup$macrocall$1$ebnf$1\", \"PatternExpressionGroup$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"PatternExpressionGroup$macrocall$1\", \"symbols\": [\"PatternExpressionGroup$macrocall$2\", \"PatternExpressionGroup$macrocall$1$ebnf$1\"], \"postprocess\": d => d[0].concat(d[1])},\n    {\"name\": \"PatternExpressionGroup\", \"symbols\": [{\"literal\":\"{\"}, \"_?\", \"PatternExpressionGroup$macrocall$1\", \"_?\", {\"literal\":\"}\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PatternExpressionGroup\"](d[2])},\n    {\"name\": \"PatternCallExpression\", \"symbols\": [{\"literal\":\"@pattern\"}, \"_?\", {\"literal\":\"(\"}, \"_?\", \"Identifier\", \"_?\", {\"literal\":\")\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PatternCall\"]({pattern: d[4]})},\n    {\"name\": \"PatternCallExpression\", \"symbols\": [{\"literal\":\"@pattern\"}, \"_?\", {\"literal\":\"(\"}, \"_?\", \"Identifier\", {\"literal\":\".\"}, \"Identifier\", \"_?\", {\"literal\":\")\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PatternCall\"]({track: d[4], pattern: d[6]})},\n    {\"name\": \"PatternCallExpression\", \"symbols\": [{\"literal\":\"@pattern\"}, \"_?\", {\"literal\":\"(\"}, \"_?\", \"Identifier\", {\"literal\":\".\"}, \"Identifier\", {\"literal\":\".\"}, \"Identifier\", \"_?\", {\"literal\":\")\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PatternCall\"]({import: d[4], track: d[6], pattern: d[8]})},\n    {\"name\": \"JoinedPatternExpression$macrocall$2\", \"symbols\": [\"PatternExpression_NoJoin\"]},\n    {\"name\": \"JoinedPatternExpression$macrocall$3\", \"symbols\": [{\"literal\":\"&\"}]},\n    {\"name\": \"JoinedPatternExpression$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [\"_?\", \"JoinedPatternExpression$macrocall$3\", \"_?\", \"JoinedPatternExpression$macrocall$2\"], \"postprocess\": d => d[3][0]},\n    {\"name\": \"JoinedPatternExpression$macrocall$1$ebnf$1\", \"symbols\": [\"JoinedPatternExpression$macrocall$1$ebnf$1$subexpression$1\"]},\n    {\"name\": \"JoinedPatternExpression$macrocall$1$ebnf$1$subexpression$2\", \"symbols\": [\"_?\", \"JoinedPatternExpression$macrocall$3\", \"_?\", \"JoinedPatternExpression$macrocall$2\"], \"postprocess\": d => d[3][0]},\n    {\"name\": \"JoinedPatternExpression$macrocall$1$ebnf$1\", \"symbols\": [\"JoinedPatternExpression$macrocall$1$ebnf$1\", \"JoinedPatternExpression$macrocall$1$ebnf$1$subexpression$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"JoinedPatternExpression$macrocall$1\", \"symbols\": [\"JoinedPatternExpression$macrocall$2\", \"JoinedPatternExpression$macrocall$1$ebnf$1\"], \"postprocess\": d => d[0].concat(d[1])},\n    {\"name\": \"JoinedPatternExpression\", \"symbols\": [\"JoinedPatternExpression$macrocall$1\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"JoinedPatternExpression\"](d[0])},\n    {\"name\": \"FunctionCallExpression$macrocall$2\", \"symbols\": [\"FunctionCallArgument\"]},\n    {\"name\": \"FunctionCallExpression$macrocall$1$ebnf$1\", \"symbols\": []},\n    {\"name\": \"FunctionCallExpression$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [\"_\", \"FunctionCallExpression$macrocall$2\"], \"postprocess\": d => d[1][0]},\n    {\"name\": \"FunctionCallExpression$macrocall$1$ebnf$1\", \"symbols\": [\"FunctionCallExpression$macrocall$1$ebnf$1\", \"FunctionCallExpression$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"FunctionCallExpression$macrocall$1\", \"symbols\": [\"FunctionCallExpression$macrocall$2\", \"FunctionCallExpression$macrocall$1$ebnf$1\"], \"postprocess\": d => d[0].concat(d[1])},\n    {\"name\": \"FunctionCallExpression\", \"symbols\": [\"Identifier\", \"_?\", {\"literal\":\"(\"}, \"_?\", \"FunctionCallExpression$macrocall$1\", \"_?\", {\"literal\":\")\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"FunctionCall\"](d[0], d[4])},\n    {\"name\": \"FunctionCallExpression\", \"symbols\": [\"Identifier\", \"_?\", {\"literal\":\"(\"}, {\"literal\":\")\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"FunctionCall\"](d[0], [])},\n    {\"name\": \"FunctionCallArgument\", \"symbols\": [\"NumericExpression\"], \"postprocess\": id},\n    {\"name\": \"FunctionCallArgument\", \"symbols\": [\"StringLiteral\"], \"postprocess\": id},\n    {\"name\": \"FunctionCallArgument\", \"symbols\": [\"BooleanLiteral\"], \"postprocess\": id},\n    {\"name\": \"FunctionCallArgument\", \"symbols\": [\"PatternExpression\"], \"postprocess\": id},\n    {\"name\": \"FunctionCallArgument\", \"symbols\": [\"BL_PP_Anchor\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"AnchorArgument\"](d[0])},\n    {\"name\": \"FunctionCallArgument\", \"symbols\": [{\"literal\":\"not\"}, \"_\", \"FunctionCallArgument\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"BooleanNot\"](d[2])},\n    {\"name\": \"FunctionCallArgument\", \"symbols\": [\"FunctionCallArgument\", \"_\", {\"literal\":\"and\"}, \"_\", \"FunctionCallArgument\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"BooleanAnd\"](d[0], d[4])},\n    {\"name\": \"FunctionCallArgument\", \"symbols\": [\"FunctionCallArgument\", \"_\", {\"literal\":\"or\"}, \"_\", \"FunctionCallArgument\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"BooleanOr\"](d[0], d[4])},\n    {\"name\": \"BeatGroupLiteral\", \"symbols\": [{\"literal\":\"<\"}, \"_?\", \"MeasureGroup\", \"_?\", {\"literal\":\">\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"BeatGroupLiteral\"](d[2])},\n    {\"name\": \"MeasureGroup$macrocall$2\", \"symbols\": [\"Measure\"]},\n    {\"name\": \"MeasureGroup$macrocall$3\", \"symbols\": [{\"literal\":\"|\"}]},\n    {\"name\": \"MeasureGroup$macrocall$1$ebnf$1\", \"symbols\": []},\n    {\"name\": \"MeasureGroup$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [\"_?\", \"MeasureGroup$macrocall$3\", \"_?\", \"MeasureGroup$macrocall$2\"], \"postprocess\": d => d[3][0]},\n    {\"name\": \"MeasureGroup$macrocall$1$ebnf$1\", \"symbols\": [\"MeasureGroup$macrocall$1$ebnf$1\", \"MeasureGroup$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"MeasureGroup$macrocall$1\", \"symbols\": [\"MeasureGroup$macrocall$2\", \"MeasureGroup$macrocall$1$ebnf$1\"], \"postprocess\": d => d[0].concat(d[1])},\n    {\"name\": \"MeasureGroup\", \"symbols\": [\"MeasureGroup$macrocall$1\"], \"postprocess\": id},\n    {\"name\": \"Measure$macrocall$2\", \"symbols\": [\"MelodicBeatLiteral\"]},\n    {\"name\": \"Measure$macrocall$1$ebnf$1\", \"symbols\": []},\n    {\"name\": \"Measure$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [\"_\", \"Measure$macrocall$2\"], \"postprocess\": d => d[1][0]},\n    {\"name\": \"Measure$macrocall$1$ebnf$1\", \"symbols\": [\"Measure$macrocall$1$ebnf$1\", \"Measure$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"Measure$macrocall$1\", \"symbols\": [\"Measure$macrocall$2\", \"Measure$macrocall$1$ebnf$1\"], \"postprocess\": d => d[0].concat(d[1])},\n    {\"name\": \"Measure\", \"symbols\": [\"Measure$macrocall$1\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Measure\"](d[0])},\n    {\"name\": \"MelodicBeatLiteral\", \"symbols\": [\"BL_TimePart\", {\"literal\":\":\"}, \"BL_PitchPart\", {\"literal\":\":\"}, \"BL_OctavePart\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"MelodicBeatLiteral\"]({time: d[0], pitch: d[2], octave: d[4]})},\n    {\"name\": \"MelodicBeatLiteral\", \"symbols\": [{\"literal\":\":\"}, \"BL_PitchPart\", {\"literal\":\":\"}, \"BL_OctavePart\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"MelodicBeatLiteral\"]({pitch: d[1], octave: d[3]})},\n    {\"name\": \"MelodicBeatLiteral\", \"symbols\": [\"BL_TimePart\", {\"literal\":\":\"}, \"BL_PitchPart\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"MelodicBeatLiteral\"]({time: d[0], pitch: d[2]})},\n    {\"name\": \"MelodicBeatLiteral\", \"symbols\": [{\"literal\":\":\"}, \"BL_PitchPart\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"MelodicBeatLiteral\"]({pitch: d[1]})},\n    {\"name\": \"MelodicBeatLiteral\", \"symbols\": [\"DrumBeatLiteral\"], \"postprocess\": id},\n    {\"name\": \"BL_TimePart\", \"symbols\": [\"NumericExpression\"], \"postprocess\": d => ({time: d[0]})},\n    {\"name\": \"BL_TimePart\", \"symbols\": [\"BL_TP_Flag\"], \"postprocess\": d => ({time: 'auto', flag: d[0]})},\n    {\"name\": \"BL_TimePart\", \"symbols\": [\"NumericExpression\", \"BL_TP_Flag\"], \"postprocess\": d => ({time: d[0], flag: d[1]})},\n    {\"name\": \"BL_TP_Flag\", \"symbols\": [{\"literal\":\"s\"}], \"postprocess\": d => 'STACCATO'},\n    {\"name\": \"BL_TP_Flag\", \"symbols\": [{\"literal\":\"a\"}], \"postprocess\": d => 'ACCENTED'},\n    {\"name\": \"BL_PitchPart\", \"symbols\": [\"BL_PP_Degree\"], \"postprocess\": id},\n    {\"name\": \"BL_PitchPart\", \"symbols\": [\"BL_PP_Chord\"], \"postprocess\": id},\n    {\"name\": \"BL_PP_Degree\", \"symbols\": [\"NumberLiteral\"], \"postprocess\": d => ({degree: d[0]})},\n    {\"name\": \"BL_PP_Degree\", \"symbols\": [\"BL_PP_Anchor\"], \"postprocess\": d => ({anchor: d[0], degree: 1})},\n    {\"name\": \"BL_PP_Degree\", \"symbols\": [\"BL_PP_Anchor\", \"NumberLiteral\"], \"postprocess\": d => ({anchor: d[0], degree: d[1]})},\n    {\"name\": \"BL_PP_Chord\", \"symbols\": [{\"literal\":\"c\"}], \"postprocess\": d => ({chord: true, degree: 1})},\n    {\"name\": \"BL_PP_Chord\", \"symbols\": [\"BL_PP_Degree\", {\"literal\":\"c\"}], \"postprocess\": d => ({chord: true, anchor: d[0].anchor, degree: d[0].degree})},\n    {\"name\": \"BL_PP_Chord\", \"symbols\": [{\"literal\":\"c\"}, \"BL_PP_Roll\"], \"postprocess\": d => ({chord: true, roll: d[1], degree: 1})},\n    {\"name\": \"BL_PP_Chord\", \"symbols\": [\"BL_PP_Degree\", {\"literal\":\"c\"}, \"BL_PP_Roll\"], \"postprocess\": d => ({chord: true, roll: d[2], anchor: d[0].anchor, degree: d[0].degree})},\n    {\"name\": \"BL_PP_Anchor\", \"symbols\": [{\"literal\":\"k\"}], \"postprocess\": d => 'KEY'},\n    {\"name\": \"BL_PP_Anchor\", \"symbols\": [{\"literal\":\"n\"}], \"postprocess\": d => 'NEXT'},\n    {\"name\": \"BL_PP_Anchor\", \"symbols\": [{\"literal\":\"s\"}], \"postprocess\": d => 'STEP'},\n    {\"name\": \"BL_PP_Anchor\", \"symbols\": [{\"literal\":\"a\"}], \"postprocess\": d => 'ARPEGGIATE'},\n    {\"name\": \"BL_PP_Roll\", \"symbols\": [{\"literal\":\"r\"}], \"postprocess\": d => 'ROLL_UP'},\n    {\"name\": \"BL_PP_Roll\", \"symbols\": [{\"literal\":\"r\"}, {\"literal\":\"d\"}], \"postprocess\": d => 'ROLL_DOWN'},\n    {\"name\": \"BL_OctavePart\", \"symbols\": [\"NumberLiteral\"], \"postprocess\": id},\n    {\"name\": \"DrumBeatGroupLiteral\", \"symbols\": [\"StringLiteral\", \"_?\", \"BeatGroupLiteral\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"DrumBeatGroupLiteral\"](d[0], d[2])},\n    {\"name\": \"DrumBeatGroupLiteral\", \"symbols\": [\"StringLiteral\", \"_?\", \"FunctionCallExpression\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"DrumBeatGroupLiteral\"](d[0], d[2])},\n    {\"name\": \"DrumBeatLiteral\", \"symbols\": [\"NumberLiteral\"], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"DrumBeatLiteral\"]({time: d[0]})},\n    {\"name\": \"DrumBeatLiteral\", \"symbols\": [\"NumberLiteral\", {\"literal\":\"a\"}], \"postprocess\": d => new _ast_ast_nodes_js__WEBPACK_IMPORTED_MODULE_1__[\"DrumBeatLiteral\"]({time: d[0], accented: true})},\n    {\"name\": \"NumericExpression\", \"symbols\": [\"NE_addsub\"], \"postprocess\": id},\n    {\"name\": \"NE_parens\", \"symbols\": [{\"literal\":\"(\"}, \"NE_addsub\", {\"literal\":\")\"}], \"postprocess\": d => d[1]},\n    {\"name\": \"NE_parens\", \"symbols\": [\"NumberLiteral\"], \"postprocess\": id},\n    {\"name\": \"NE_muldiv\", \"symbols\": [\"NE_muldiv\", {\"literal\":\"*\"}, \"NE_parens\"], \"postprocess\": d => (d[0] * d[2])},\n    {\"name\": \"NE_muldiv\", \"symbols\": [\"NE_muldiv\", {\"literal\":\"/\"}, \"NE_parens\"], \"postprocess\": d => (d[0] / d[2])},\n    {\"name\": \"NE_muldiv\", \"symbols\": [\"NE_parens\"], \"postprocess\": id},\n    {\"name\": \"NE_addsub\", \"symbols\": [\"NE_addsub\", {\"literal\":\"+\"}, \"NE_muldiv\"], \"postprocess\": d => (d[0] + d[2])},\n    {\"name\": \"NE_addsub\", \"symbols\": [\"NE_addsub\", {\"literal\":\"-\"}, \"NE_muldiv\"], \"postprocess\": d => (d[0] - d[2])},\n    {\"name\": \"NE_addsub\", \"symbols\": [\"NE_muldiv\"], \"postprocess\": id},\n    {\"name\": \"Identifier\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"identifier\") ? {type: \"identifier\"} : identifier)], \"postprocess\": d => d[0].value},\n    {\"name\": \"NumberLiteral\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": d => Number(d[0].value)},\n    {\"name\": \"NumberLiteral\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"beat_number\") ? {type: \"beat_number\"} : beat_number)], \"postprocess\": d => Number(d[0].value)},\n    {\"name\": \"BooleanLiteral\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"boolean\") ? {type: \"boolean\"} : boolean)], \"postprocess\": d => Boolean(d[0].value)},\n    {\"name\": \"StringLiteral\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"quoted_string\") ? {type: \"quoted_string\"} : quoted_string)], \"postprocess\": d => d[0].value.slice(1, -1)},\n    {\"name\": \"_?$ebnf$1\", \"symbols\": [\"_\"], \"postprocess\": id},\n    {\"name\": \"_?$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"_?\", \"symbols\": [\"_?$ebnf$1\"], \"postprocess\": () => null},\n    {\"name\": \"_\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"ws\") ? {type: \"ws\"} : ws)], \"postprocess\": () => null},\n    {\"name\": \"_\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"beat_ws\") ? {type: \"beat_ws\"} : beat_ws)], \"postprocess\": () => null},\n    {\"name\": \"_$ebnf$1\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"ws\") ? {type: \"ws\"} : ws)], \"postprocess\": id},\n    {\"name\": \"_$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"_$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"ws\") ? {type: \"ws\"} : ws)], \"postprocess\": id},\n    {\"name\": \"_$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"_$ebnf$2$subexpression$1\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"comment\") ? {type: \"comment\"} : comment), \"_$ebnf$2$subexpression$1$ebnf$1\"]},\n    {\"name\": \"_$ebnf$2\", \"symbols\": [\"_$ebnf$2$subexpression$1\"]},\n    {\"name\": \"_$ebnf$2$subexpression$2$ebnf$1\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"ws\") ? {type: \"ws\"} : ws)], \"postprocess\": id},\n    {\"name\": \"_$ebnf$2$subexpression$2$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"_$ebnf$2$subexpression$2\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"comment\") ? {type: \"comment\"} : comment), \"_$ebnf$2$subexpression$2$ebnf$1\"]},\n    {\"name\": \"_$ebnf$2\", \"symbols\": [\"_$ebnf$2\", \"_$ebnf$2$subexpression$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"_\", \"symbols\": [\"_$ebnf$1\", \"_$ebnf$2\"], \"postprocess\": () => null},\n    {\"name\": \"_$ebnf$3\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"beat_ws\") ? {type: \"beat_ws\"} : beat_ws)], \"postprocess\": id},\n    {\"name\": \"_$ebnf$3\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"_$ebnf$4$subexpression$1$ebnf$1\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"beat_ws\") ? {type: \"beat_ws\"} : beat_ws)], \"postprocess\": id},\n    {\"name\": \"_$ebnf$4$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"_$ebnf$4$subexpression$1\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"comment\") ? {type: \"comment\"} : comment), \"_$ebnf$4$subexpression$1$ebnf$1\"]},\n    {\"name\": \"_$ebnf$4\", \"symbols\": [\"_$ebnf$4$subexpression$1\"]},\n    {\"name\": \"_$ebnf$4$subexpression$2$ebnf$1\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"beat_ws\") ? {type: \"beat_ws\"} : beat_ws)], \"postprocess\": id},\n    {\"name\": \"_$ebnf$4$subexpression$2$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"_$ebnf$4$subexpression$2\", \"symbols\": [(_lexer_lexer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].has(\"comment\") ? {type: \"comment\"} : comment), \"_$ebnf$4$subexpression$2$ebnf$1\"]},\n    {\"name\": \"_$ebnf$4\", \"symbols\": [\"_$ebnf$4\", \"_$ebnf$4$subexpression$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"_\", \"symbols\": [\"_$ebnf$3\", \"_$ebnf$4\"], \"postprocess\": () => null}\n];\nlet ParserStart = \"main\";\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ Lexer, ParserRules, ParserStart });\n\n\n//# sourceURL=webpack:///./src/parser/grammar.ne?");

/***/ }),

/***/ "./src/parser/parser.js":
/*!******************************!*\
  !*** ./src/parser/parser.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var nearley__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nearley */ \"./node_modules/nearley/lib/nearley.js\");\n/* harmony import */ var nearley__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nearley__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grammar_ne__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grammar.ne */ \"./src/parser/grammar.ne\");\n\n\n/**\n * Parses a string into a set of possible abstract systax trees (ASTs) trees of\n * objects representing the syntax of the file.\n * @param {string} data The string to parse\n * @return {Promise.<Array>.<GlobalScope>} A promise that resolves to an array\n * of parsings, each of which is an AST. (Ideally there should be 1 parsing.)\n *\n * See ast_nodes.js or the grammar itself for an idea of what the nodes in the\n * tree might look like.\n * @private\n */\nlet string_to_ast = function string_to_ast(data) {\n  // Create a Parser object from our grammar.\n  // (I don't think you can reset the parser so make a new one each time)\n  const parser = new nearley__WEBPACK_IMPORTED_MODULE_0___default.a.Parser(nearley__WEBPACK_IMPORTED_MODULE_0___default.a.Grammar.fromCompiled(_grammar_ne__WEBPACK_IMPORTED_MODULE_1__[\"default\"]));\n  \n  return new Promise(function(resolve, reject) {\n    try {\n      parser.feed(data);\n    } catch(err) {\n      // Because tabs screw up the formatting of SyntaxError messages.\n      err.message = err.message.replace(/\\t/g, ' ');\n      reject(err);\n    }\n    resolve(parser.results);\n  });\n};\n\n/**\n * Parse a string into an Abstract Syntax Tree (AST) -- a tree of objects\n * representing the syntax of the file.\n * @param {string}  data The string to parse\n * @return {Promise.<GlobalScope>} The Abstract Systax Tree (AST).\n */\n let parse = function parse(data) {\n   return new Promise(function(resolve, reject) {\n     string_to_ast(data)\n       .then(parses => {\n         if(!parses.length) {\n           throw new SyntaxError('Something went wrong, input not parseable.');\n         }\n         resolve(parses[0]);\n       });\n   });\n };\n \n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  string_to_ast: string_to_ast,\n  parse: parse\n});\n\n\n//# sourceURL=webpack:///./src/parser/parser.js?");

/***/ }),

/***/ "./src/parser/test/test.js":
/*!*********************************!*\
  !*** ./src/parser/test/test.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _loader_loader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../loader/loader.js */ \"./src/loader/loader.js\");\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser.js */ \"./src/parser/parser.js\");\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! assert */ \"assert\");\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function() {\n  \n  // load a couple test files\n  // yes one promise can have multiple thens, I checked in chrome console\n  let styles_dir = './src/parser/test/styles/';\n  let file_ambig = _loader_loader_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].load(styles_dir + 'ambig.play');\n  let file_example = _loader_loader_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].load(styles_dir + 'example.play');\n  \n  /**\n   * Parser smoketest: try parsing an old/modified version of the swing style\n   * (this is the file I add new features to when I'm modifying the grammar)\n   */\n  file_example.then(_parser_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parse).then(ast => {\n    ast.init()\n    // assert.ok(ast.tracks[0] typeof Track);\n  });\n  \n  /** test for grammar ambiguities with:\n   *  - \"|\" and \"&\"-separated lists\n   *  - whitespace-separated lists\n   *  - multiple lines of // comments\n   */\n  file_ambig\n    .then(_parser_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].string_to_ast)\n    .then(results => {\n      assert__WEBPACK_IMPORTED_MODULE_2___default.a.equal(results.length, 1, 'expected 1 parse (grammar ambiguous)');\n    });\n});;\n\n\n//# sourceURL=webpack:///./src/parser/test/test.js?");

/***/ }),

/***/ "./test/song.js":
/*!**********************!*\
  !*** ./test/song.js ***!
  \**********************/
/*! exports provided: Song */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Song\", function() { return Song; });\n/*\n* Everything in this file will move soon, this is just for testing rn\n*/\n\n/**\n * An array-like object that represents a song\n */\nclass Song extends Array {\n  constructor(measures) {\n    super(...measures);\n    this._idx = -1;\n  }\n  getKey() {\n    return this[0][0];\n  }\n  [Symbol.iterator]() {\n    return new SongIterator(this);\n  }\n}\n\n/**\n * An extension to the Iterator protocol with some extra bits for our enjoyment\n */\nclass SongIterator {\n  constructor(song) {\n    this.song = song;\n    this.index = -1;\n  }\n  next() {\n    if(++this.index < this.song.length) {\n      return {value: this.song[this.index], done: false};\n    } else {\n      return {value: undefined, done: true};\n    }\n  }\n  get(idx) {\n    return this.song[idx];\n  }\n  getRelative(dist = 0) {\n    return this.song[this.index + dist];\n  }\n}\n\n//# sourceURL=webpack:///./test/song.js?");

/***/ }),

/***/ "./test/test.js":
/*!**********************!*\
  !*** ./test/test.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_parser_test_test_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/parser/test/test.js */ \"./src/parser/test/test.js\");\n/* harmony import */ var _song_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./song.js */ \"./test/song.js\");\n/* harmony import */ var _src_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/index.js */ \"./src/index.js\");\n\n\n\n\n//const verbose = process.argv.includes('--verbose');\n\n// run parser tests\nObject(_src_parser_test_test_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n// @TODO: have a set of tests directly on playback.js to make sure the apis\n// export correctly cuz webpack is being iffy about that\n\n(async function() {\n  let song = new _song_js__WEBPACK_IMPORTED_MODULE_1__[\"Song\"]([\n    // Each array is a measure, and each item in an array is a beat.\n    // null inside a measure means there's no chord set for that beat.\n    ['A-', null, null, null], ['E', null, null, null], ['A-7', null, null, null], ['A-6', null, null, null],\n    ['CM7', null, 'A7', null], ['D-7', null, 'G7', null], ['C6', null, null, null], ['Bdim7', null, 'E7', null],\n    ['A-', null, null, null], ['E', null, null, null], ['A-7', null, null, null], ['A-6', null, null, null],\n    ['CM7', null, 'A7', null], ['D-7', null, 'G7', null], ['C6', null, null, null], ['C6', null, null, null]\n  ]);\n\n  let style = new _src_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].PlaybackStyle('./test/styles/example.play');\n  await style.init();\n  style.play(song);\n})();\n\n//# sourceURL=webpack:///./test/test.js?");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"assert\");\n\n//# sourceURL=webpack:///external_%22assert%22?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");\n\n//# sourceURL=webpack:///external_%22path%22?");

/***/ })

/******/ });